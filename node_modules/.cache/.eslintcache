[{"/Users/macbook/Documents/remix/src/index.js":"1","/Users/macbook/Documents/remix/src/pages/Home.js":"2","/Users/macbook/Documents/remix/src/pages/NFT.js":"3","/Users/macbook/Documents/remix/src/pages/CarbonCredit.js":"4"},{"size":1017,"mtime":1649275069141,"results":"5","hashOfConfig":"6"},{"size":2849,"mtime":1649268962886,"results":"7","hashOfConfig":"6"},{"size":17146,"mtime":1649279441200,"results":"8","hashOfConfig":"6"},{"size":12017,"mtime":1649276647868,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},"1ixpq7u",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/macbook/Documents/remix/src/index.js",["28"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport NFT from './pages/NFT';\nimport CarbonCredit from './pages/CarbonCredit';\nimport Home from './pages/Home';\nimport { Provider, chain, defaultL2Chains } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\"\n\nconst chains = defaultL2Chains;\n\nconst connectors = ({ chainId }) => {\n  const rpcUrl =\n    chains.find((x) => x.id === chainId)?.rpcUrls?.[0] ??\n    chain.mainnet.rpcUrls[0]\n  return [\n    new InjectedConnector({\n      chains,\n      options: { shimDisconnect: true },\n    })\n  ]\n}\nReactDOM.render(\n  <React.StrictMode>\n    <Provider autoConnect connectors={connectors}>\n    <BrowserRouter>\n    <Routes>\n    <Route path=\"/\" element={<Home/>}/>\n    <Route path=\"/nft\" element={<NFT/>}/>\n    <Route path=\"/carboncredit\" element={<CarbonCredit/>}/>\n    </Routes>\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["29","30"],"/Users/macbook/Documents/remix/src/pages/Home.js",["31"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nconst bull = (\n    <Box\n      component=\"span\"\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n      â€¢\n    </Box>\n  );\n\nconst Home = () =>{\n    return(\n        <>\n         <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Solid World Dao Remix\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </Box>\n    <div>\n    <Grid container spacing={12}>\n        <Grid item xs={4}>\n        <Card sx={{ minWidth: 275, marginTop: 20 }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                    NFT\n                </Typography>\n                <Typography variant=\"body2\">\n                    Manage the smart contract NFT.sol\n                    deployed on the Polygon Mumbai Network\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <a href=\"/nft\"><Button size=\"small\">Go to NFT Remix</Button></a>\n            </CardActions>\n        </Card>\n        </Grid>\n        <Grid item xs={4}>\n        <Card sx={{ minWidth: 275, marginTop: 20  }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                    SOLID\n                </Typography>\n                <Typography variant=\"body2\">\n                    Manage the smart contract Solid.sol\n                    deployed on the Polygon Mumbai Network\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <a href=\"/solid\"><Button size=\"small\">Go to SOLID Remix</Button></a>\n            </CardActions>\n        </Card>\n        </Grid>\n        <Grid item xs={4}>\n        <Card sx={{ minWidth: 275, marginTop: 20  }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                    Carbon Credit\n                </Typography>\n                <Typography variant=\"body2\">\n                    Manage the smart contract CarbonCredit.sol\n                    deployed on the Polygon Mumbai Network\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <a href=\"/carboncredit\"><Button size=\"small\">Go to Carbon Credit Remix</Button></a>\n            </CardActions>\n        </Card>\n        </Grid>\n    </Grid>\n    </div>\n        </>\n    )\n}\nexport default Home",["32","33"],"/Users/macbook/Documents/remix/src/pages/NFT.js",["34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],[],"import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport React, {useState} from 'react';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { isMobile } from \"react-device-detect\";\nimport { useConnect, useAccount } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport abi from '../contracts/NFTabi.json'\n\nconst defaultUserWalletState = {\n  address: '0x0000000000000000000000000000000000000000',\n  network: null,\n  connected: false\n}\n\nconst mumbaiChainParameter = {\n  chainId: \"0x13881\",\n  chainName: \"Mumbai\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://rpc-mumbai.maticvigil.com\"],\n  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n}\n\nconst url = \"https://polygon-mumbai.g.alchemy.com/v2/8lsMkVFvQr7UoBJT30QWCQpt9VNodpF3\";\n\n\nfunction NFT() {\n\n  // Connect To MetaMask And Mumbai  Start //\n\n  const [{ data: accountData }, disconnect] = useAccount({\n    fetchEns: true,\n  })\n\n  let [isLoading, setIsLoading] = React.useState(false);\n\n  let [userWallet, setUserWallet] = React.useState(defaultUserWalletState);\n\n  let [buttonText, setButtonText] = React.useState('Connect Wallet')\n\n  const [{\n    data: connectData,\n    loading: connectDataLoading,\n    error: connectDataError\n  }, connect] = useConnect();\n\n  let wagmiObj;\n  connectData.connectors.map(obj => { wagmiObj = obj });\n\n  React.useEffect(() => {\n    if (typeof window.ethereum !== 'undefined') {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        console.log(`Wallet changed: ${accounts[0]}`);\n        if (accounts[0] === undefined) {\n          setUserWallet(defaultUserWalletState);\n        }\n        else if (accounts[0] !== userWallet.address) {\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            address: accounts[0]\n          }));\n        }\n      })\n      window.ethereum.on('chainChanged', (chainId) => {\n        console.log(`Network changed: ${chainId}`);\n        if (chainId !== '0x13881') {\n          window.location.reload();\n        }\n      })\n    } else {\n      toast('Please install Metamask to use Solid World Dapp.');\n    }\n  }, []);\n\n  async function handleWalletConnection() {\n    setIsLoading(true);\n    if (!userWallet.connected) {\n      try {\n        setButtonText(\"Wallet Connected\");\n        console.log('Connecting MetaMask...');\n        const connectMetamask = await connect(wagmiObj);\n        if (connectMetamask.data) {\n          if (window.ethereum.chainId !== '0x13881') { \n            await checkNetwork();\n          }\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            network: window.ethereum.chainId,\n            address: connectMetamask.data.account,\n            connected: true\n          }));\n          toast.success('Connected Account to Solid World Dapp.', {duration: 3000});\n          console.log('Connected Account to Mumbai Network: ', connectMetamask.data.account);\n        }\n        setIsLoading(false);\n        return;\n      } catch (error) {\n        setUserWallet(defaultUserWalletState);\n        console.log('Connecting MetaMask Error: ', error, connectDataError);\n        setIsLoading(false);\n        window.location.reload();\n        return;\n      }\n    } else {\n      setUserWallet(defaultUserWalletState);\n      toast.error('Disconnected Account.', { duration: 3000 });\n      console.log('User wallet disconnect');\n      setIsLoading(false);\n      return;\n    }\n  }\n\n  async function checkNetwork() {\n    console.log('Connecting MetaMask to Mumbai Network...');\n    toast.loading('Please connect your Metamask to Mumbai Polygon Testnet to use Solid World Dapp');\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x13881' }],\n      });\n      return;\n    } catch (switchError) {\n      if (isMobile || switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              mumbaiChainParameter\n            ],\n          });\n          return;\n        } catch (addError) {\n          console.log('Connecting Mumbai Network: ', addError.message);\n          throw addError;\n        }\n      }\n      console.log('Connecting Mumbai Netowrk: ', switchError.message);\n      throw switchError;\n    }\n  }\n    // Connect To MetaMask And Mumbai  End //\n\n    // Tabs Start //\n\n    function TabPanel(props) {\n      const { children, value, index, ...other } = props;\n    \n      return (\n        <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`simple-tabpanel-${index}`}\n          aria-labelledby={`simple-tab-${index}`}\n          {...other}\n        >\n          {value === index && (\n            <Box sx={{ p: 3 }}>\n              <Typography>{children}</Typography>\n            </Box>\n          )}\n        </div>\n      );\n    }\n    \n    TabPanel.propTypes = {\n      children: PropTypes.node,\n      index: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n    \n    function a11yProps(index) {\n      return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n      };\n    }\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n  // Tabs End //\n\n  // Contract Start //\n  const [contract, setContract] = useState(null);\n  const [signer, setSigner] = useState(null);\n\n  const contractAddress = \"0x726ff71b94FEAC008A82610fFCFc22470cf3BC75\"\n\n  const updateContract = () => {\n    try{\n      let tempProvider = new ethers.providers.JsonRpcProvider(url)\n    console.log(tempProvider)\n    let tempSigner = tempProvider.getSigner(accountData.address)\n    console.log(tempSigner)\n    let tempContract = new ethers.Contract(contractAddress, abi , tempSigner)\n    setContract(tempContract)\n    console.log(tempContract)\n    }\n    catch(err){\n      setButtonText(\"Connected With Error\")\n    }\n  }\n\n  async function Balance(e){\n    e.preventDefault()\n    try{\n      const balanceAddress = document.getElementById('balanceAddress').value;\n      console.log(balanceAddress)\n      const tempBalance = await contract.balanceOf(balanceAddress)\n      const balanceParsed = ethers.utils.formatEther(tempBalance)\n      alert('The balance Is: ' + balanceParsed)\n    }\n    catch (err) {\n      console.log(err)\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getApproved(e){\n    e.preventDefault()\n    try{\n      let approvedId = parseInt(document.getElementById('getApprovedId').value);\n      const approved = await contract.getApproved(approvedId)\n      alert(approved)\n    }\n    catch (err) {\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getName(e){\n    e.preventDefault()\n      console.log('Name: ' + await contract.name())\n  }\n  async function getOwnerOf(e){\n    e.preventDefault()\n    try{\n      const ownerId = document.getElementById('ownerOfTokenId').value;\n      alert('Owner: ' + await contract.ownerOf(ownerId))\n    }\n    catch (err) {\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getSupportsInterface(e){\n    e.preventDefault()\n    try{\n      const id = document.getElementById('supportsInterfaceId').value;\n      alert('Supports Interface: ' + await contract.supportsInterface(parseInt(id)));\n    }\n    catch (err) {\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getSymbol(e){\n    e.preventDefault()\n    try{\n      alert('Symbol: ' + await contract.symbol())\n    }\n    catch (err) {\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getTokenURI(e){\n    e.preventDefault()\n    try{\n      const tokenUriId = document.getElementById('tokenUriId').value;\n      alert('Token URI: ' + await contract.tokenURI(parseInt(tokenUriId)));\n    }\n    catch (err) {\n      alert('Error: ' + err.message)\n    }\n  }\n  async function getApprove(e){\n    e.preventDefault()\n    try{\n      const approveTo = document.getElementById('approveTo').value;\n      const approveTokenId = document.getElementById('approveTokenId').value;\n      alert('Approve Token: ' + await contract.approve(approveTo, parseInt(approveTokenId)));\n    }\n    catch(err){\n      alert('Error: ' + err.message);\n    }\n  }\n  async function getInitialize(e){\n    e.preventDefault()\n    try{\n      const initializeName = document.getElementById('initializeName').value;\n      const initializeSymbol = document.getElementById('initializeSymbol').value;\n      alert('Initialize' + await contract.initialize(initializeName, initializeSymbol));\n    }\n    catch(err){\n      alert('Error: ' + err.message);\n    }\n  }\n  async function getMint(e){\n    e.preventDefault()\n    try{\n      const mintTo = document.getElementById('mintTo').value;\n      const mintTokenId = document.getElementById('mintTokenId').value;\n      alert('Mint' + await contract.mint(mintTo, parseInt(mintTokenId)));\n    }\n    catch (err) {\n      alert('Error: ' + err.message);\n    }\n  }\n  async function getRenounce(e){\n    e.preventDefault()\n    try{\n      alert('Renounce : ' + await contract.renounceOwnership())\n    }\n    catch (err) { alert('Error: ' + err.message); }\n  }\n  async function getStfFrom(e){\n    e.preventDefault()\n    try{\n      const stfFrom = document.getElementById('stfFrom').value;\n      const stfTo = document.getElementById('stfTo').value;\n      const stfTokenId = document.getElementById('stfTokenId').value;\n      alert('Safe Transfer From : ' + await contract.safeTransferFrom(stfFrom, stfTo, stfTokenId))\n    }\n    catch (err) { alert('Error: ' + err.message); }\n  }\n  async function getSbmuri(e){\n    try{\n      const sbmuriData = document.getElementById('sbmuri').value;\n      alert('Safe Transfer From : ' + await contract.setBaseMetadataURI(sbmuriData))\n    }\n    catch (err) { alert('Error: ' + err.message); }\n  }\n  async function getSafeTransfer(e){\n    e.preventDefault();\n    const transferFrom = document.getElementById('transferFrom').value;\n    const transferFromTo = document.getElementById('transferFromTo').value;\n    const transferFromTokenId = parseInt(document.getElementById('transferFromTokenId').value);\n    alert('Safe Transfer : ' + await contract.transferFrom(transferFrom, transferFromTo, transferFromTokenId))\n  }\n  async function getTransferownership(e){\n    e.preventDefault();\n    const transferownership = document.getElementById('transferownership').value;\n    alert('Transferownership : ' + await contract.transferOwnership())\n  }\n\n  const connectWallet = () => {\n    handleWalletConnection()\n    updateContract()\n  }\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}> NFT </Typography>\n          <Button color=\"inherit\" onClick={connectWallet}> {buttonText} </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"Read\" {...a11yProps(0)} />\n          <Tab label=\"Write\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={1}>\n        <div>\n          <h3>Approve</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approveTo' label=\"to\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approveTokenId' label=\"tokenId\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getApprove}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Initialize</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='initializeName' label=\"name_\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='initializeSymbol' label=\"symbol_\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getInitialize} > Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Mint</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintTo' label=\"_to\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintTokenId' label=\"_tokenId\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getMint}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Renounce Ownership</h3>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getRenounce} > Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Safe Transfer From</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfFrom' label=\"from\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfTo' label=\"to\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfTokenId' label=\"tokenId\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfData' label=\"_data\" variant=\"outlined\" />\n          </div>\n          <div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getStfFrom}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Set Base Metadata Uri</h3>\n          <div>\n            <TextField sx={{width: '100%'}} id=\"outlined-basic\" id='sbmuri' label=\"_newBaseMetadataURI\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSbmuri}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Transfer from</h3>\n          <div>\n            <TextField sx={{width: '50%'}} id=\"outlined-basic\" id='transferFrom' label=\"from\" variant=\"outlined\" />\n            <TextField sx={{width: '50%'}} id=\"outlined-basic\" id='transferFromTo' label=\"to\" variant=\"outlined\" />\n            <TextField sx={{width: '100%'}} id=\"outlined-basic\" id='transferFromTokenId' label=\"tokenId\" variant=\"outlined\" />\n          </div>\n          <div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSafeTransfer} > Call </Button>\n          </div>\n        </div> \n        <div>\n          <h3>Transfer Ownership</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='transferownership' label=\"To\"></TextField>\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getTransferownership}> Call </Button>\n          </div>\n        </div> \n    </TabPanel>\n    <TabPanel value={value} index={0}>\n    <div>\n      <h3>Balance</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='balanceAddress' label=\"address\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={Balance}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Get Approved</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='getApprovedId' label=\"tokenId\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getApproved}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Name</h3>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getName}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Owner Of</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='ownerOfTokenId' label=\"tokenId\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getOwnerOf}> Call </Button>\n      </div>\n    </div>\n  <div>\n    <h3>Supports Interface</h3>\n    <div>\n    <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='supportsInterfaceId' label=\"tokenId\" variant=\"outlined\" />\n    </div>\n    <div>\n      <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSupportsInterface}> Call </Button>\n    </div>\n  </div>\n  <div>\n    <h3>Symbol</h3>\n    <div>\n    <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSymbol}> Call </Button>\n    </div>\n  </div>\n  <div>\n    <h3>TokenURI</h3>\n    <div>\n    <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='tokenUriId' label=\"_id\" variant=\"outlined\" />\n    </div>\n    <div>\n    <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getTokenURI}> Call </Button>\n    </div>\n  </div>\n    </TabPanel>\n    </Box>\n    </>\n  );\n}\n\nexport default NFT;","/Users/macbook/Documents/remix/src/pages/CarbonCredit.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],[],"import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport React, {useState} from 'react';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { isMobile } from \"react-device-detect\";\nimport { useConnect, useAccount } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport abi from '../contracts/NFTabi.json'\n\nconst defaultUserWalletState = {\n  address: '0x0000000000000000000000000000000000000000',\n  network: null,\n  connected: false\n}\n\nconst mumbaiChainParameter = {\n  chainId: \"0x13881\",\n  chainName: \"Mumbai\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://rpc-mumbai.maticvigil.com\"],\n  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n}\n\nconst url = \"https://polygon-mumbai.g.alchemy.com/v2/8lsMkVFvQr7UoBJT30QWCQpt9VNodpF3\";\n\nconst CarbonCredit = () => {\n// Connect To MetaMask And Mumbai  Start //\n\n  const [{ data: accountData }, disconnect] = useAccount({\n    fetchEns: true,\n  })\n\n  let [isLoading, setIsLoading] = React.useState(false);\n\n  let [userWallet, setUserWallet] = React.useState(defaultUserWalletState);\n\n  let [buttonText, setButtonText] = React.useState('Connect Wallet')\n\n  const [{\n    data: connectData,\n    loading: connectDataLoading,\n    error: connectDataError\n  }, connect] = useConnect();\n\n  let wagmiObj;\n  connectData.connectors.map(obj => { wagmiObj = obj });\n\n  React.useEffect(() => {\n    if (typeof window.ethereum !== 'undefined') {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        console.log(`Wallet changed: ${accounts[0]}`);\n        if (accounts[0] === undefined) {\n          setUserWallet(defaultUserWalletState);\n        }\n        else if (accounts[0] !== userWallet.address) {\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            address: accounts[0]\n          }));\n        }\n      })\n      window.ethereum.on('chainChanged', (chainId) => {\n        console.log(`Network changed: ${chainId}`);\n        if (chainId !== '0x13881') {\n          window.location.reload();\n        }\n      })\n    } else {\n      toast('Please install Metamask to use Solid World Dapp.');\n    }\n  }, []);\n\n  async function handleWalletConnection() {\n    setIsLoading(true);\n    if (!userWallet.connected) {\n      try {\n        setButtonText(\"Wallet Connected\");\n        console.log('Connecting MetaMask...');\n        const connectMetamask = await connect(wagmiObj);\n        if (connectMetamask.data) {\n          if (window.ethereum.chainId !== '0x13881') { \n            await checkNetwork();\n          }\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            network: window.ethereum.chainId,\n            address: connectMetamask.data.account,\n            connected: true\n          }));\n          toast.success('Connected Account to Solid World Dapp.', {duration: 3000});\n          console.log('Connected Account to Mumbai Network: ', connectMetamask.data.account);\n        }\n        setIsLoading(false);\n        return;\n      } catch (error) {\n        setUserWallet(defaultUserWalletState);\n        console.log('Connecting MetaMask Error: ', error, connectDataError);\n        setIsLoading(false);\n        window.location.reload();\n        return;\n      }\n    } else {\n      setUserWallet(defaultUserWalletState);\n      toast.error('Disconnected Account.', { duration: 3000 });\n      console.log('User wallet disconnect');\n      setIsLoading(false);\n      return;\n    }\n  }\n\n  async function checkNetwork() {\n    console.log('Connecting MetaMask to Mumbai Network...');\n    toast.loading('Please connect your Metamask to Mumbai Polygon Testnet to use Solid World Dapp');\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x13881' }],\n      });\n      return;\n    } catch (switchError) {\n      if (isMobile || switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              mumbaiChainParameter\n            ],\n          });\n          return;\n        } catch (addError) {\n          console.log('Connecting Mumbai Network: ', addError.message);\n          throw addError;\n        }\n      }\n      console.log('Connecting Mumbai Netowrk: ', switchError.message);\n      throw switchError;\n    }\n  }\n    // Connect To MetaMask And Mumbai  End //\n\n    // Tabs Start //\n\n    function TabPanel(props) {\n      const { children, value, index, ...other } = props;\n    \n      return (\n        <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`simple-tabpanel-${index}`}\n          aria-labelledby={`simple-tab-${index}`}\n          {...other}\n        >\n          {value === index && (\n            <Box sx={{ p: 3 }}>\n              <Typography>{children}</Typography>\n            </Box>\n          )}\n        </div>\n      );\n    }\n    \n    TabPanel.propTypes = {\n      children: PropTypes.node,\n      index: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n    \n    function a11yProps(index) {\n      return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n      };\n    }\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n  // Tabs End //\n\n  const connectWallet = () => {\n    handleWalletConnection()\n  }\n\n    return (\n      <div>\n          <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}> Carbon Credit </Typography>\n          <Button color=\"inherit\" onClick={connectWallet}> {buttonText} </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"Read\" {...a11yProps(0)} />\n          <Tab label=\"Write\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <div>\n          <h3>Balance</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='balanceAddress' label=\"address\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='balanceId' label=\"uint256\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Balance of Batch</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='balanceBaccount' label=\"address\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='balanceBids' label=\"uint256\" variant=\"outlined\" />\n          </div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        </div>\n        <div>\n          <h3> Is Approved For All </h3> \n          <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approvedAccount' label=\"address\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approvedOperator' label=\"address\" variant=\"outlined\" />\n          </div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        </div>\n        <div>\n          <h3>Owner</h3>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        </div>\n        <div>\n          <h3>Supports Interface</h3>\n          <div>\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='supportsAddress' label=\"address\" variant=\"outlined\" />\n          </div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}}> Call </Button>\n        </div>\n        <div>\n          <h3>Uri</h3>\n          <div>\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='uriUint' label=\"uin256\" variant=\"outlined\" />\n          </div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <h3>Burn</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='burnAccount' label=\"account\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='burnId' label=\"id\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='burnAmount' label=\"_amount\" variant=\"outlined\" />\n        </div>\n        <div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        </div>\n        <h3>Initialize</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='uri' label=\"uri_\" variant=\"outlined\" />\n        </div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}}> Call </Button>\n        <h3>Mint</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintTo' label=\"_to\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintId' label=\"_id\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintAmount' label=\"_amount\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='mintData' label=\"_data\" variant=\"outlined\" />\n        </div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        <h3>Renounce Owner Ship</h3>\n        <div>\n          <Button variant=\"contained\" sx={{width: '100%' , mt: 2}}> Call </Button>\n        </div>\n        <h3>Safe Batch Transfer From</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='sbtFrom' label=\"from\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='sbtTo' label=\"to\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='sbtIds' label=\"ids\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='sbtAmounts' label=\"amount\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='sbtData' label=\"data\" variant=\"outlined\" />\n        </div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        <h3>Safe Transfer From</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfFrom' label=\"from\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfTo' label=\"to\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfIds' label=\"ids\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfAmounts' label=\"amount\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='stfData' label=\"data\" variant=\"outlined\" />\n        </div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        <h3>Set Approval For All</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='safOperator' label=\"operator\" variant=\"outlined\" />\n          <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='safApproved' label=\"approved\" variant=\"outlined\" />\n        </div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} > Call </Button>\n        <h3>TransferOwnership</h3>\n        <div>\n          <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='transferOwner' label=\"newOwner\" variant=\"outlined\" />\n        </div>\n      </TabPanel>\n      </Box>\n      </div>\n    )\n}\nexport default CarbonCredit",{"ruleId":"103","severity":1,"message":"104","line":13,"column":9,"nodeType":"105","messageId":"106","endLine":13,"endColumn":15},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":12,"column":7,"nodeType":"105","messageId":"106","endLine":12,"endColumn":11},{"ruleId":"107","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"103","severity":1,"message":"114","line":11,"column":17,"nodeType":"105","messageId":"106","endLine":11,"endColumn":24},{"ruleId":"103","severity":1,"message":"115","line":42,"column":33,"nodeType":"105","messageId":"106","endLine":42,"endColumn":43},{"ruleId":"103","severity":1,"message":"116","line":46,"column":8,"nodeType":"105","messageId":"106","endLine":46,"endColumn":17},{"ruleId":"103","severity":1,"message":"117","line":54,"column":14,"nodeType":"105","messageId":"106","endLine":54,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":59,"column":34,"nodeType":"120","messageId":"121","endLine":59,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":84,"column":6,"nodeType":"124","endLine":84,"endColumn":8,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":199,"column":10,"nodeType":"105","messageId":"106","endLine":199,"endColumn":16},{"ruleId":"103","severity":1,"message":"127","line":199,"column":18,"nodeType":"105","messageId":"106","endLine":199,"endColumn":27},{"ruleId":"103","severity":1,"message":"128","line":352,"column":11,"nodeType":"105","messageId":"106","endLine":352,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":382,"column":64,"nodeType":"131","messageId":"132","endLine":382,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":383,"column":64,"nodeType":"131","messageId":"132","endLine":383,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":392,"column":64,"nodeType":"131","messageId":"132","endLine":392,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":393,"column":64,"nodeType":"131","messageId":"132","endLine":393,"endColumn":85},{"ruleId":"129","severity":1,"message":"130","line":402,"column":64,"nodeType":"131","messageId":"132","endLine":402,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":403,"column":64,"nodeType":"131","messageId":"132","endLine":403,"endColumn":80},{"ruleId":"129","severity":1,"message":"130","line":418,"column":64,"nodeType":"131","messageId":"132","endLine":418,"endColumn":76},{"ruleId":"129","severity":1,"message":"130","line":419,"column":64,"nodeType":"131","messageId":"132","endLine":419,"endColumn":74},{"ruleId":"129","severity":1,"message":"130","line":420,"column":64,"nodeType":"131","messageId":"132","endLine":420,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":421,"column":64,"nodeType":"131","messageId":"132","endLine":421,"endColumn":76},{"ruleId":"129","severity":1,"message":"130","line":430,"column":65,"nodeType":"131","messageId":"132","endLine":430,"endColumn":76},{"ruleId":"129","severity":1,"message":"130","line":439,"column":64,"nodeType":"131","messageId":"132","endLine":439,"endColumn":81},{"ruleId":"129","severity":1,"message":"130","line":440,"column":64,"nodeType":"131","messageId":"132","endLine":440,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":441,"column":65,"nodeType":"131","messageId":"132","endLine":441,"endColumn":89},{"ruleId":"129","severity":1,"message":"130","line":450,"column":65,"nodeType":"131","messageId":"132","endLine":450,"endColumn":87},{"ruleId":"129","severity":1,"message":"130","line":461,"column":61,"nodeType":"131","messageId":"132","endLine":461,"endColumn":80},{"ruleId":"129","severity":1,"message":"130","line":470,"column":61,"nodeType":"131","messageId":"132","endLine":470,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":485,"column":61,"nodeType":"131","messageId":"132","endLine":485,"endColumn":80},{"ruleId":"129","severity":1,"message":"130","line":494,"column":57,"nodeType":"131","messageId":"132","endLine":494,"endColumn":81},{"ruleId":"129","severity":1,"message":"130","line":509,"column":57,"nodeType":"131","messageId":"132","endLine":509,"endColumn":72},{"ruleId":"103","severity":1,"message":"133","line":10,"column":16,"nodeType":"105","messageId":"106","endLine":10,"endColumn":24},{"ruleId":"103","severity":1,"message":"114","line":11,"column":17,"nodeType":"105","messageId":"106","endLine":11,"endColumn":24},{"ruleId":"103","severity":1,"message":"134","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":16},{"ruleId":"103","severity":1,"message":"135","line":15,"column":8,"nodeType":"105","messageId":"106","endLine":15,"endColumn":11},{"ruleId":"103","severity":1,"message":"136","line":35,"column":7,"nodeType":"105","messageId":"106","endLine":35,"endColumn":10},{"ruleId":"103","severity":1,"message":"137","line":40,"column":18,"nodeType":"105","messageId":"106","endLine":40,"endColumn":29},{"ruleId":"103","severity":1,"message":"115","line":40,"column":33,"nodeType":"105","messageId":"106","endLine":40,"endColumn":43},{"ruleId":"103","severity":1,"message":"116","line":44,"column":8,"nodeType":"105","messageId":"106","endLine":44,"endColumn":17},{"ruleId":"103","severity":1,"message":"117","line":52,"column":14,"nodeType":"105","messageId":"106","endLine":52,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":57,"column":34,"nodeType":"120","messageId":"121","endLine":57,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":82,"column":6,"nodeType":"124","endLine":82,"endColumn":8,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"130","line":220,"column":64,"nodeType":"131","messageId":"132","endLine":220,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":221,"column":64,"nodeType":"131","messageId":"132","endLine":221,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":230,"column":64,"nodeType":"131","messageId":"132","endLine":230,"endColumn":84},{"ruleId":"129","severity":1,"message":"130","line":231,"column":64,"nodeType":"131","messageId":"132","endLine":231,"endColumn":80},{"ruleId":"129","severity":1,"message":"130","line":238,"column":62,"nodeType":"131","messageId":"132","endLine":238,"endColumn":82},{"ruleId":"129","severity":1,"message":"130","line":239,"column":62,"nodeType":"131","messageId":"132","endLine":239,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":250,"column":63,"nodeType":"131","messageId":"132","endLine":250,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":257,"column":63,"nodeType":"131","messageId":"132","endLine":257,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":265,"column":62,"nodeType":"131","messageId":"132","endLine":265,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":266,"column":62,"nodeType":"131","messageId":"132","endLine":266,"endColumn":73},{"ruleId":"129","severity":1,"message":"130","line":267,"column":63,"nodeType":"131","messageId":"132","endLine":267,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":274,"column":63,"nodeType":"131","messageId":"132","endLine":274,"endColumn":71},{"ruleId":"129","severity":1,"message":"130","line":279,"column":62,"nodeType":"131","messageId":"132","endLine":279,"endColumn":73},{"ruleId":"129","severity":1,"message":"130","line":280,"column":62,"nodeType":"131","messageId":"132","endLine":280,"endColumn":73},{"ruleId":"129","severity":1,"message":"130","line":281,"column":62,"nodeType":"131","messageId":"132","endLine":281,"endColumn":77},{"ruleId":"129","severity":1,"message":"130","line":282,"column":62,"nodeType":"131","messageId":"132","endLine":282,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":291,"column":62,"nodeType":"131","messageId":"132","endLine":291,"endColumn":74},{"ruleId":"129","severity":1,"message":"130","line":292,"column":62,"nodeType":"131","messageId":"132","endLine":292,"endColumn":72},{"ruleId":"129","severity":1,"message":"130","line":293,"column":62,"nodeType":"131","messageId":"132","endLine":293,"endColumn":73},{"ruleId":"129","severity":1,"message":"130","line":294,"column":62,"nodeType":"131","messageId":"132","endLine":294,"endColumn":77},{"ruleId":"129","severity":1,"message":"130","line":295,"column":63,"nodeType":"131","messageId":"132","endLine":295,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":300,"column":62,"nodeType":"131","messageId":"132","endLine":300,"endColumn":74},{"ruleId":"129","severity":1,"message":"130","line":301,"column":62,"nodeType":"131","messageId":"132","endLine":301,"endColumn":72},{"ruleId":"129","severity":1,"message":"130","line":302,"column":62,"nodeType":"131","messageId":"132","endLine":302,"endColumn":73},{"ruleId":"129","severity":1,"message":"130","line":303,"column":62,"nodeType":"131","messageId":"132","endLine":303,"endColumn":77},{"ruleId":"129","severity":1,"message":"130","line":304,"column":63,"nodeType":"131","messageId":"132","endLine":304,"endColumn":75},{"ruleId":"129","severity":1,"message":"130","line":309,"column":62,"nodeType":"131","messageId":"132","endLine":309,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":310,"column":62,"nodeType":"131","messageId":"132","endLine":310,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":315,"column":63,"nodeType":"131","messageId":"132","endLine":315,"endColumn":81},"no-unused-vars","'rpcUrl' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'bull' is assigned a value but never used.",["139"],["140"],"'Toaster' is defined but never used.","'disconnect' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'connectDataLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userWallet.address'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'signer' is assigned a value but never used.","'setSigner' is assigned a value but never used.","'transferownership' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'ethers' is defined but never used.","'abi' is defined but never used.","'url' is assigned a value but never used.","'accountData' is assigned a value but never used.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [userWallet.address]",{"range":"146","text":"147"},{"range":"148","text":"147"},[2464,2466],"[userWallet.address]",[2472,2474]]