[{"/Users/macbook/Documents/remix/src/index.js":"1","/Users/macbook/Documents/remix/src/pages/Home.js":"2","/Users/macbook/Documents/remix/src/pages/NFT.js":"3","/Users/macbook/Documents/remix/src/pages/CarbonCredit.js":"4"},{"size":1017,"mtime":1649280788722,"results":"5","hashOfConfig":"6"},{"size":2849,"mtime":1649280788722,"results":"7","hashOfConfig":"6"},{"size":13195,"mtime":1649334830019,"results":"8","hashOfConfig":"6"},{"size":12017,"mtime":1649280788722,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"121vfyh",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbook/Documents/remix/src/index.js",["23"],[],"/Users/macbook/Documents/remix/src/pages/Home.js",["24"],[],"/Users/macbook/Documents/remix/src/pages/NFT.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],[],"import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport React, {useState} from 'react';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { isMobile } from \"react-device-detect\";\nimport { useConnect, useAccount } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport NFTabi from '../contracts/NFTabi.json'\n\nconst defaultUserWalletState = {\n  address: '0x0000000000000000000000000000000000000000',\n  network: null,\n  connected: false\n}\n\nconst mumbaiChainParameter = {\n  chainId: \"0x13881\",\n  chainName: \"Mumbai\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://rpc-mumbai.maticvigil.com\"],\n  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n}\n\nconst url = \"https://polygon-mumbai.g.alchemy.com/v2/8lsMkVFvQr7UoBJT30QWCQpt9VNodpF3\";\n\n\nfunction NFT() {\n\n  // Connect To MetaMask And Mumbai  Start //\n\n  const [{ data: accountData }, disconnect] = useAccount({\n    fetchEns: true,\n  })\n\n  let [isLoading, setIsLoading] = React.useState(false);\n\n  let [userWallet, setUserWallet] = React.useState(defaultUserWalletState);\n\n  let [buttonText, setButtonText] = React.useState('Connect Wallet')\n\n  const [{\n    data: connectData,\n    loading: connectDataLoading,\n    error: connectDataError\n  }, connect] = useConnect();\n\n  let wagmiObj;\n  connectData.connectors.map(obj => { wagmiObj = obj });\n\n  React.useEffect(() => {\n    if (typeof window.ethereum !== 'undefined') {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        console.log(`Wallet changed: ${accounts[0]}`);\n        if (accounts[0] === undefined) {\n          setUserWallet(defaultUserWalletState);\n        }\n        else if (accounts[0] !== userWallet.address) {\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            address: accounts[0]\n          }));\n        }\n      })\n      window.ethereum.on('chainChanged', (chainId) => {\n        console.log(`Network changed: ${chainId}`);\n        if (chainId !== '0x13881') {\n          window.location.reload();\n        }\n      })\n    } else {\n      toast('Please install Metamask to use Solid World Dapp.');\n    }\n  }, []);\n\n  async function handleWalletConnection() {\n    setIsLoading(true);\n    if (!userWallet.connected) {\n      try {\n        setButtonText(\"Wallet Connected\");\n        console.log('Connecting MetaMask...');\n        const connectMetamask = await connect(wagmiObj);\n        if (connectMetamask.data) {\n          if (window.ethereum.chainId !== '0x13881') { \n            await checkNetwork();\n          }\n          setUserWallet(prevUserWallet => ({\n            ...prevUserWallet,\n            network: window.ethereum.chainId,\n            address: connectMetamask.data.account,\n            connected: true\n          }));\n          toast.success('Connected Account to Solid World Dapp.', {duration: 3000});\n          console.log('Connected Account to Mumbai Network: ', connectMetamask.data.account);\n        }\n        setIsLoading(false);\n        return;\n      } catch (error) {\n        setUserWallet(defaultUserWalletState);\n        console.log('Connecting MetaMask Error: ', error, connectDataError);\n        setIsLoading(false);\n        window.location.reload();\n        return;\n      }\n    } else {\n      setUserWallet(defaultUserWalletState);\n      toast.error('Disconnected Account.', { duration: 3000 });\n      console.log('User wallet disconnect');\n      setIsLoading(false);\n      return;\n    }\n  }\n\n  async function checkNetwork() {\n    console.log('Connecting MetaMask to Mumbai Network...');\n    toast.loading('Please connect your Metamask to Mumbai Polygon Testnet to use Solid World Dapp');\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x13881' }],\n      });\n      return;\n    } catch (switchError) {\n      if (isMobile || switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              mumbaiChainParameter\n            ],\n          });\n          return;\n        } catch (addError) {\n          console.log('Connecting Mumbai Network: ', addError.message);\n          throw addError;\n        }\n      }\n      console.log('Connecting Mumbai Netowrk: ', switchError.message);\n      throw switchError;\n    }\n  }\n    // Connect To MetaMask And Mumbai  End //\n\n    // Tabs Start //\n\n    function TabPanel(props) {\n      const { children, value, index, ...other } = props;\n    \n      return (\n        <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`simple-tabpanel-${index}`}\n          aria-labelledby={`simple-tab-${index}`}\n          {...other}\n        >\n          {value === index && (\n            <Box sx={{ p: 3 }}>\n              <Typography>{children}</Typography>\n            </Box>\n          )}\n        </div>\n      );\n    }\n    \n    TabPanel.propTypes = {\n      children: PropTypes.node,\n      index: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n    \n    function a11yProps(index) {\n      return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n      };\n    }\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n  // Tabs End //\n\n  // Contract Start //\n \n  async function Balance(e){\n    e.preventDefault()\n      const balanceAddress = document.getElementById('balanceAddress').value;  \n  }\n  async function getApproved(e){\n    e.preventDefault()\n   let approvedId = parseInt(document.getElementById('getApprovedId').value);\n  }\n  async function getName(e){\n    e.preventDefault()\n  }\n  async function getOwnerOf(e){\n    e.preventDefault()\n    const ownerId = document.getElementById('ownerOfTokenId').value;\n    \n  }\n  async function getSymbol(e){\n    e.preventDefault()\n  }\n  async function getTokenURI(e){\n    e.preventDefault()\n      const tokenUriId = document.getElementById('tokenUriId').value;\n  }\n  async function getApprove(e){\n    e.preventDefault()\n      const approveTo = document.getElementById('approveTo').value;\n      const approveTokenId = document.getElementById('approveTokenId').value;\n  }\n  async function getRenounce(e){\n    e.preventDefault()\n  }\n  async function getStfFrom(e){\n    e.preventDefault()\n      const stfFrom = document.getElementById('stfFrom').value;\n      const stfTo = document.getElementById('stfTo').value;\n      const stfTokenId = document.getElementById('stfTokenId').value;\n  }\n  async function getSbmuri(e){\n      const sbmuriData = document.getElementById('sbmuri').value;\n  }\n  async function getSafeTransfer(e){\n    e.preventDefault();\n    const transferFrom = document.getElementById('transferFrom').value;\n    const transferFromTo = document.getElementById('transferFromTo').value;\n    const transferFromTokenId = parseInt(document.getElementById('transferFromTokenId').value);\n  }\n  async function getTransferownership(e){\n    e.preventDefault();\n    const transferownership = document.getElementById('transferownership').value;\n  }\n\n\n  const contractAddress = '0x2f85416eB19C30361a63632E874886E8a5C4DA95'\n\n  const [provider, setProvider] = useState(null)\n  const [signer, setSigner] = useState(null)\n  const [contract, setContract] = useState(null)\n\n  const updateContract = async () => {\n   try{\n    let tempProvider = new ethers.providers.JsonRpcProvider(url)\n    console.log(tempProvider)\n    setProvider(tempProvider)\n    let tempSigner = tempProvider.getSigner(accountData.address)\n    console.log(tempSigner)\n    setSigner(tempSigner)\n    let tempContract = new ethers.Contract(contractAddress, NFTabi, tempSigner)\n    console.log(await tempContract.name())\n   }\n   catch (err) {\n    \n   }\n  }\n\n  const connectWallet = () => {\n    handleWalletConnection()\n    updateContract()\n  }\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}> NFT </Typography>\n          <Button color=\"inherit\" onClick={connectWallet}> {buttonText} </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"Read\" {...a11yProps(0)} />\n          <Tab label=\"Write\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={1}>\n        <div>\n          <h3>Approve</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approveTo' label=\"to\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='approveTokenId' label=\"tokenId\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getApprove}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Renounce Ownership</h3>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getRenounce} > Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Safe Transfer From</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfFrom' label=\"from\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfTo' label=\"to\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfTokenId' label=\"tokenId\" variant=\"outlined\" />\n            <TextField id=\"outlined-basic\" sx={{width: '50%'}} id='stfData' label=\"_data\" variant=\"outlined\" />\n          </div>\n          <div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getStfFrom}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Set Base Metadata Uri</h3>\n          <div>\n            <TextField sx={{width: '100%'}} id=\"outlined-basic\" id='sbmuri' label=\"_newBaseMetadataURI\" variant=\"outlined\" />\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSbmuri}> Call </Button>\n          </div>\n        </div>\n        <div>\n          <h3>Transfer from</h3>\n          <div>\n            <TextField sx={{width: '50%'}} id=\"outlined-basic\" id='transferFrom' label=\"from\" variant=\"outlined\" />\n            <TextField sx={{width: '50%'}} id=\"outlined-basic\" id='transferFromTo' label=\"to\" variant=\"outlined\" />\n            <TextField sx={{width: '100%'}} id=\"outlined-basic\" id='transferFromTokenId' label=\"tokenId\" variant=\"outlined\" />\n          </div>\n          <div>\n          <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSafeTransfer} > Call </Button>\n          </div>\n        </div> \n        <div>\n          <h3>Transfer Ownership</h3>\n          <div>\n            <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='transferownership' label=\"To\"></TextField>\n          </div>\n          <div>\n            <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getTransferownership}> Call </Button>\n          </div>\n        </div> \n    </TabPanel>\n    <TabPanel value={value} index={0}>\n    <div>\n      <h3>Balance</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='balanceAddress' label=\"address\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={Balance}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Get Approved</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='getApprovedId' label=\"tokenId\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getApproved}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Name</h3>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getName}> Call </Button>\n      </div>\n    </div>\n    <div>\n      <h3>Owner Of</h3>\n      <div>\n        <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='ownerOfTokenId' label=\"tokenId\" variant=\"outlined\" />\n      </div>\n      <div>\n        <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getOwnerOf}> Call </Button>\n      </div>\n    </div>\n  <div>\n    <h3>Symbol</h3>\n    <div>\n    <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getSymbol}> Call </Button>\n    </div>\n  </div>\n  <div>\n    <h3>TokenURI</h3>\n    <div>\n    <TextField id=\"outlined-basic\" sx={{width: '100%'}} id='tokenUriId' label=\"_id\" variant=\"outlined\" />\n    </div>\n    <div>\n    <Button variant=\"contained\" sx={{width: '100%', mt: 2}} onClick={getTokenURI}> Call </Button>\n    </div>\n  </div>\n    </TabPanel>\n    </Box>\n    </>\n  );\n}\n\nexport default NFT;","/Users/macbook/Documents/remix/src/pages/CarbonCredit.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],{"ruleId":"104","severity":1,"message":"105","line":13,"column":9,"nodeType":"106","messageId":"107","endLine":13,"endColumn":15},{"ruleId":"104","severity":1,"message":"108","line":12,"column":7,"nodeType":"106","messageId":"107","endLine":12,"endColumn":11},{"ruleId":"104","severity":1,"message":"109","line":11,"column":17,"nodeType":"106","messageId":"107","endLine":11,"endColumn":24},{"ruleId":"104","severity":1,"message":"110","line":42,"column":33,"nodeType":"106","messageId":"107","endLine":42,"endColumn":43},{"ruleId":"104","severity":1,"message":"111","line":46,"column":8,"nodeType":"106","messageId":"107","endLine":46,"endColumn":17},{"ruleId":"104","severity":1,"message":"112","line":54,"column":14,"nodeType":"106","messageId":"107","endLine":54,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":59,"column":34,"nodeType":"115","messageId":"116","endLine":59,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":84,"column":6,"nodeType":"119","endLine":84,"endColumn":8,"suggestions":"120"},{"ruleId":"104","severity":1,"message":"121","line":201,"column":13,"nodeType":"106","messageId":"107","endLine":201,"endColumn":27},{"ruleId":"104","severity":1,"message":"122","line":205,"column":8,"nodeType":"106","messageId":"107","endLine":205,"endColumn":18},{"ruleId":"104","severity":1,"message":"123","line":212,"column":11,"nodeType":"106","messageId":"107","endLine":212,"endColumn":18},{"ruleId":"104","severity":1,"message":"124","line":220,"column":13,"nodeType":"106","messageId":"107","endLine":220,"endColumn":23},{"ruleId":"104","severity":1,"message":"125","line":224,"column":13,"nodeType":"106","messageId":"107","endLine":224,"endColumn":22},{"ruleId":"104","severity":1,"message":"126","line":225,"column":13,"nodeType":"106","messageId":"107","endLine":225,"endColumn":27},{"ruleId":"104","severity":1,"message":"127","line":232,"column":13,"nodeType":"106","messageId":"107","endLine":232,"endColumn":20},{"ruleId":"104","severity":1,"message":"128","line":233,"column":13,"nodeType":"106","messageId":"107","endLine":233,"endColumn":18},{"ruleId":"104","severity":1,"message":"129","line":234,"column":13,"nodeType":"106","messageId":"107","endLine":234,"endColumn":23},{"ruleId":"104","severity":1,"message":"130","line":237,"column":13,"nodeType":"106","messageId":"107","endLine":237,"endColumn":23},{"ruleId":"104","severity":1,"message":"131","line":241,"column":11,"nodeType":"106","messageId":"107","endLine":241,"endColumn":23},{"ruleId":"104","severity":1,"message":"132","line":242,"column":11,"nodeType":"106","messageId":"107","endLine":242,"endColumn":25},{"ruleId":"104","severity":1,"message":"133","line":243,"column":11,"nodeType":"106","messageId":"107","endLine":243,"endColumn":30},{"ruleId":"104","severity":1,"message":"134","line":247,"column":11,"nodeType":"106","messageId":"107","endLine":247,"endColumn":28},{"ruleId":"104","severity":1,"message":"135","line":253,"column":10,"nodeType":"106","messageId":"107","endLine":253,"endColumn":18},{"ruleId":"104","severity":1,"message":"136","line":254,"column":10,"nodeType":"106","messageId":"107","endLine":254,"endColumn":16},{"ruleId":"104","severity":1,"message":"137","line":255,"column":10,"nodeType":"106","messageId":"107","endLine":255,"endColumn":18},{"ruleId":"104","severity":1,"message":"138","line":255,"column":20,"nodeType":"106","messageId":"107","endLine":255,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":299,"column":64,"nodeType":"141","messageId":"142","endLine":299,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":300,"column":64,"nodeType":"141","messageId":"142","endLine":300,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":315,"column":64,"nodeType":"141","messageId":"142","endLine":315,"endColumn":76},{"ruleId":"139","severity":1,"message":"140","line":316,"column":64,"nodeType":"141","messageId":"142","endLine":316,"endColumn":74},{"ruleId":"139","severity":1,"message":"140","line":317,"column":64,"nodeType":"141","messageId":"142","endLine":317,"endColumn":79},{"ruleId":"139","severity":1,"message":"140","line":318,"column":64,"nodeType":"141","messageId":"142","endLine":318,"endColumn":76},{"ruleId":"139","severity":1,"message":"140","line":327,"column":65,"nodeType":"141","messageId":"142","endLine":327,"endColumn":76},{"ruleId":"139","severity":1,"message":"140","line":336,"column":64,"nodeType":"141","messageId":"142","endLine":336,"endColumn":81},{"ruleId":"139","severity":1,"message":"140","line":337,"column":64,"nodeType":"141","messageId":"142","endLine":337,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":338,"column":65,"nodeType":"141","messageId":"142","endLine":338,"endColumn":89},{"ruleId":"139","severity":1,"message":"140","line":347,"column":65,"nodeType":"141","messageId":"142","endLine":347,"endColumn":87},{"ruleId":"139","severity":1,"message":"140","line":358,"column":61,"nodeType":"141","messageId":"142","endLine":358,"endColumn":80},{"ruleId":"139","severity":1,"message":"140","line":367,"column":61,"nodeType":"141","messageId":"142","endLine":367,"endColumn":79},{"ruleId":"139","severity":1,"message":"140","line":382,"column":61,"nodeType":"141","messageId":"142","endLine":382,"endColumn":80},{"ruleId":"139","severity":1,"message":"140","line":397,"column":57,"nodeType":"141","messageId":"142","endLine":397,"endColumn":72},{"ruleId":"104","severity":1,"message":"143","line":10,"column":16,"nodeType":"106","messageId":"107","endLine":10,"endColumn":24},{"ruleId":"104","severity":1,"message":"109","line":11,"column":17,"nodeType":"106","messageId":"107","endLine":11,"endColumn":24},{"ruleId":"104","severity":1,"message":"144","line":14,"column":10,"nodeType":"106","messageId":"107","endLine":14,"endColumn":16},{"ruleId":"104","severity":1,"message":"145","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":11},{"ruleId":"104","severity":1,"message":"146","line":35,"column":7,"nodeType":"106","messageId":"107","endLine":35,"endColumn":10},{"ruleId":"104","severity":1,"message":"147","line":40,"column":18,"nodeType":"106","messageId":"107","endLine":40,"endColumn":29},{"ruleId":"104","severity":1,"message":"110","line":40,"column":33,"nodeType":"106","messageId":"107","endLine":40,"endColumn":43},{"ruleId":"104","severity":1,"message":"111","line":44,"column":8,"nodeType":"106","messageId":"107","endLine":44,"endColumn":17},{"ruleId":"104","severity":1,"message":"112","line":52,"column":14,"nodeType":"106","messageId":"107","endLine":52,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":57,"column":34,"nodeType":"115","messageId":"116","endLine":57,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":82,"column":6,"nodeType":"119","endLine":82,"endColumn":8,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"140","line":220,"column":64,"nodeType":"141","messageId":"142","endLine":220,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":221,"column":64,"nodeType":"141","messageId":"142","endLine":221,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":230,"column":64,"nodeType":"141","messageId":"142","endLine":230,"endColumn":84},{"ruleId":"139","severity":1,"message":"140","line":231,"column":64,"nodeType":"141","messageId":"142","endLine":231,"endColumn":80},{"ruleId":"139","severity":1,"message":"140","line":238,"column":62,"nodeType":"141","messageId":"142","endLine":238,"endColumn":82},{"ruleId":"139","severity":1,"message":"140","line":239,"column":62,"nodeType":"141","messageId":"142","endLine":239,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":250,"column":63,"nodeType":"141","messageId":"142","endLine":250,"endColumn":83},{"ruleId":"139","severity":1,"message":"140","line":257,"column":63,"nodeType":"141","messageId":"142","endLine":257,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":265,"column":62,"nodeType":"141","messageId":"142","endLine":265,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":266,"column":62,"nodeType":"141","messageId":"142","endLine":266,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":267,"column":63,"nodeType":"141","messageId":"142","endLine":267,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":274,"column":63,"nodeType":"141","messageId":"142","endLine":274,"endColumn":71},{"ruleId":"139","severity":1,"message":"140","line":279,"column":62,"nodeType":"141","messageId":"142","endLine":279,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":280,"column":62,"nodeType":"141","messageId":"142","endLine":280,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":281,"column":62,"nodeType":"141","messageId":"142","endLine":281,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":282,"column":62,"nodeType":"141","messageId":"142","endLine":282,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":291,"column":62,"nodeType":"141","messageId":"142","endLine":291,"endColumn":74},{"ruleId":"139","severity":1,"message":"140","line":292,"column":62,"nodeType":"141","messageId":"142","endLine":292,"endColumn":72},{"ruleId":"139","severity":1,"message":"140","line":293,"column":62,"nodeType":"141","messageId":"142","endLine":293,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":294,"column":62,"nodeType":"141","messageId":"142","endLine":294,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":295,"column":63,"nodeType":"141","messageId":"142","endLine":295,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":300,"column":62,"nodeType":"141","messageId":"142","endLine":300,"endColumn":74},{"ruleId":"139","severity":1,"message":"140","line":301,"column":62,"nodeType":"141","messageId":"142","endLine":301,"endColumn":72},{"ruleId":"139","severity":1,"message":"140","line":302,"column":62,"nodeType":"141","messageId":"142","endLine":302,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":303,"column":62,"nodeType":"141","messageId":"142","endLine":303,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":304,"column":63,"nodeType":"141","messageId":"142","endLine":304,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":309,"column":62,"nodeType":"141","messageId":"142","endLine":309,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":310,"column":62,"nodeType":"141","messageId":"142","endLine":310,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":315,"column":63,"nodeType":"141","messageId":"142","endLine":315,"endColumn":81},"no-unused-vars","'rpcUrl' is assigned a value but never used.","Identifier","unusedVar","'bull' is assigned a value but never used.","'Toaster' is defined but never used.","'disconnect' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'connectDataLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userWallet.address'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'balanceAddress' is assigned a value but never used.","'approvedId' is assigned a value but never used.","'ownerId' is assigned a value but never used.","'tokenUriId' is assigned a value but never used.","'approveTo' is assigned a value but never used.","'approveTokenId' is assigned a value but never used.","'stfFrom' is assigned a value but never used.","'stfTo' is assigned a value but never used.","'stfTokenId' is assigned a value but never used.","'sbmuriData' is assigned a value but never used.","'transferFrom' is assigned a value but never used.","'transferFromTo' is assigned a value but never used.","'transferFromTokenId' is assigned a value but never used.","'transferownership' is assigned a value but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","'contract' is assigned a value but never used.","'setContract' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'ethers' is defined but never used.","'abi' is defined but never used.","'url' is assigned a value but never used.","'accountData' is assigned a value but never used.",["150"],{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},"Update the dependencies array to be: [userWallet.address]",{"range":"154","text":"155"},{"range":"156","text":"155"},[2467,2469],"[userWallet.address]",[2472,2474]]