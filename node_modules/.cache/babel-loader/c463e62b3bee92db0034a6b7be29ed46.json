{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/pre-dao/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Navbar } from 'react-bootstrap';\nimport { ethers } from \"ethers\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sctAddress = \"0x54005ab145e74d6354fe81390523e67dc40da64f\";\n\nfunction App() {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"SCT TESTE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bO/PxcW5aKHDKT1E1EVxOCdLuV4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Documents/pre-dao/src/App.js"],"names":["Container","Navbar","ethers","React","sctAddress","App","errorMessage","setErrorMessage","useState","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAsB,OAAtB;;AACA,MAAMC,UAAU,GAAG,4CAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,IAAD,CAAhD;AACD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,gBAAD,CAApD;;AAEG,QAAMK,oBAAoB,GAAG,MAAM;AAC/B,QAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,EAAmD;AAE/CF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACZC,QAAAA,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;AACAR,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACH,OAJD,EAKCU,KALD,CAKOC,KAAK,IAAI;AACZhB,QAAAA,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAf;AAEH,OARD;AAUH,KAZD,MAYO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAnB,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACH;AACJ,GAjBD;;AAmBF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCQF,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import {Container, Navbar} from 'react-bootstrap'\nimport { ethers } from \"ethers\";\nimport React, {} from 'react'\nconst sctAddress = \"0x54005ab145e74d6354fe81390523e67dc40da64f\"\n\nfunction App() {\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n    const connectWalletHandler = () => {\n        if (window.ethereum && window.ethereum.isMetaMask) {\n\n            window.ethereum.request({ method: 'eth_requestAccounts'})\n            .then(result => {\n                accountChangedHandler(result[0]);\n                setConnButtonText('Wallet Connected');\n            })\n            .catch(error => {\n                setErrorMessage(error.message);\n            \n            });\n\n        } else {\n            console.log('Need to install MetaMask');\n            setErrorMessage('Please install MetaMask browser extension to interact');\n        }\n    }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\">\n        <Container>\n          <Navbar.Brand>SCT TESTE</Navbar.Brand>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}