{"ast":null,"code":"import { C as Connector, a as ConnectorNotFoundError, U as UserRejectedRequestError, n as normalizeChainId, b as allChains, c as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError, d as defaultChains, e as defaultL2Chains } from './base-5c99d89b.esm.js';\nexport { A as AddChainError, c as ChainNotConfiguredError, C as Connector, h as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, S as SwitchChainError, U as UserRejectedRequestError, b as allChains, f as chain, d as defaultChains, e as defaultL2Chains, g as developmentChains, n as normalizeChainId } from './base-5c99d89b.esm.js';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { ethers, utils } from 'ethers';\nimport 'eventemitter3';\nconst erc1155ABI = [{\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: '_owner',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'uri',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\nconst erc20ABI = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_spender',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_from',\n    type: 'address'\n  }, {\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }, {\n    name: '_spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  payable: true,\n  stateMutability: 'payable',\n  type: 'fallback'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Approval',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}];\nconst erc721ABI = [{\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'ownerOf',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'tokenURI',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}]; // https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\n\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nconst getInjectedName = ethereum => {\n  if (!ethereum) return 'Injected';\n  if (ethereum.isMetaMask) return 'MetaMask';\n  if (ethereum.isCoinbaseWallet) return 'Coinbase Wallet';\n  if (ethereum.isFrame) return 'Frame';\n  if (ethereum.isTally) return 'Tally';\n  return 'Injected';\n};\n\nconst shimKey = 'wagmi.shimDisconnect';\n\nclass InjectedConnector extends Connector {\n  id = 'injected';\n  ready = typeof window != 'undefined' && !!window.ethereum;\n  #provider;\n\n  constructor(config) {\n    super({ ...config,\n      options: config?.options\n    });\n    let name = 'Injected';\n    if (typeof window !== 'undefined') name = getInjectedName(window.ethereum);\n    this.name = name;\n  }\n\n  async connect() {\n    try {\n      const provider = this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        if (!this.options?.shimChainChangedDisconnect) provider.on('disconnect', this.onDisconnect);\n      }\n\n      const account = await this.getAccount();\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.setItem(shimKey, 'true');\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (error.code === 4001) throw new UserRejectedRequestError();\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = this.getProvider();\n    if (!provider?.removeListener) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n  }\n\n  async getAccount() {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) this.#provider = window.ethereum;\n    return this.#provider;\n  }\n\n  async getSigner() {\n    const provider = this.getProvider();\n    const account = await this.getAccount();\n    return new Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      if (this.options?.shimDisconnect && typeof localStorage !== 'undefined' && !localStorage.getItem(shimKey)) return false;\n      const provider = this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      const chains = [...this.chains, ...allChains];\n      return chains.find(x => x.id === chainId);\n    } catch (error) {\n      // Indicates chain is not added to MetaMask\n      if (error.code === 4902) {\n        try {\n          const chain = this.chains.find(x => x.id === chainId);\n          if (!chain) throw new ChainNotConfiguredError();\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: chain.rpcUrls,\n              blockExplorerUrls: chain.blockExplorers?.map(x => x.url)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          throw new AddChainError();\n        }\n      } else if (error.code === 4001) throw new UserRejectedRequestError();else throw new SwitchChainError();\n    }\n  }\n\n  async watchAsset(_ref) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref;\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    await provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  onAccountsChanged = accounts => {\n    if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n      account: getAddress(accounts[0])\n    });\n  };\n  onChainChanged = chainId => {\n    const id = normalizeChainId(chainId);\n    const unsupported = this.isChainUnsupported(id);\n    this.emit('change', {\n      chain: {\n        id,\n        unsupported\n      }\n    });\n  };\n  onDisconnect = () => {\n    this.emit('disconnect');\n    if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n  };\n}\n\nconst balanceAction = async _ref2 => {\n  let {\n    chains = [...defaultChains, ...defaultL2Chains],\n    config,\n    provider\n  } = _ref2;\n  const unit = config.formatUnits ?? 'ether';\n\n  if (config.token) {\n    const contract = new ethers.Contract(config.token, erc20ABI, provider);\n    const [value, decimals, symbol] = await Promise.all([contract.balanceOf(config.addressOrName), contract.decimals(), contract.symbol()]);\n    return {\n      decimals,\n      formatted: utils.formatUnits(value, unit),\n      symbol,\n      unit,\n      value\n    };\n  }\n\n  const value = await provider.getBalance(config.addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: chain?.nativeCurrency?.decimals ?? 18,\n    formatted: utils.formatUnits(value, unit),\n    symbol: chain?.nativeCurrency?.symbol ?? 'ETH',\n    unit,\n    value\n  };\n};\n\nexport { InjectedConnector, balanceAction, erc1155ABI, erc20ABI, erc721ABI, units };","map":{"version":3,"sources":["/Users/macbook/Documents/pre-dao/node_modules/wagmi-core/dist/wagmi-core.esm.js"],"names":["C","Connector","a","ConnectorNotFoundError","U","UserRejectedRequestError","n","normalizeChainId","b","allChains","c","ChainNotConfiguredError","A","AddChainError","S","SwitchChainError","d","defaultChains","e","defaultL2Chains","h","ConnectorAlreadyConnectedError","f","chain","g","developmentChains","Web3Provider","getAddress","hexValue","ethers","utils","erc1155ABI","constant","inputs","internalType","name","type","outputs","payable","stateMutability","erc20ABI","anonymous","indexed","erc721ABI","units","getInjectedName","ethereum","isMetaMask","isCoinbaseWallet","isFrame","isTally","shimKey","InjectedConnector","id","ready","window","provider","constructor","config","options","connect","getProvider","on","onAccountsChanged","onChainChanged","shimChainChangedDisconnect","onDisconnect","account","getAccount","getChainId","unsupported","isChainUnsupported","shimDisconnect","localStorage","setItem","error","code","disconnect","removeListener","removeItem","accounts","request","method","then","getSigner","isAuthorized","getItem","switchChain","chainId","params","chains","find","x","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","blockExplorers","map","url","addError","watchAsset","address","decimals","image","symbol","length","emit","balanceAction","unit","formatUnits","token","contract","Contract","value","Promise","all","balanceOf","addressOrName","formatted","getBalance","network"],"mappings":"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","sourcesContent":["import { C as Connector, a as ConnectorNotFoundError, U as UserRejectedRequestError, n as normalizeChainId, b as allChains, c as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError, d as defaultChains, e as defaultL2Chains } from './base-5c99d89b.esm.js';\nexport { A as AddChainError, c as ChainNotConfiguredError, C as Connector, h as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, S as SwitchChainError, U as UserRejectedRequestError, b as allChains, f as chain, d as defaultChains, e as defaultL2Chains, g as developmentChains, n as normalizeChainId } from './base-5c99d89b.esm.js';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { ethers, utils } from 'ethers';\nimport 'eventemitter3';\n\nconst erc1155ABI = [{\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: '_owner',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'uri',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\n\nconst erc20ABI = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_spender',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_from',\n    type: 'address'\n  }, {\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }, {\n    name: '_spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  payable: true,\n  stateMutability: 'payable',\n  type: 'fallback'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Approval',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}];\n\nconst erc721ABI = [{\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'ownerOf',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'tokenURI',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\n\n// https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nconst getInjectedName = ethereum => {\n  if (!ethereum) return 'Injected';\n  if (ethereum.isMetaMask) return 'MetaMask';\n  if (ethereum.isCoinbaseWallet) return 'Coinbase Wallet';\n  if (ethereum.isFrame) return 'Frame';\n  if (ethereum.isTally) return 'Tally';\n  return 'Injected';\n};\n\nconst shimKey = 'wagmi.shimDisconnect';\nclass InjectedConnector extends Connector {\n  id = 'injected';\n  ready = typeof window != 'undefined' && !!window.ethereum;\n  #provider;\n\n  constructor(config) {\n    super({ ...config,\n      options: config?.options\n    });\n    let name = 'Injected';\n    if (typeof window !== 'undefined') name = getInjectedName(window.ethereum);\n    this.name = name;\n  }\n\n  async connect() {\n    try {\n      const provider = this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        if (!this.options?.shimChainChangedDisconnect) provider.on('disconnect', this.onDisconnect);\n      }\n\n      const account = await this.getAccount();\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.setItem(shimKey, 'true');\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (error.code === 4001) throw new UserRejectedRequestError();\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = this.getProvider();\n    if (!provider?.removeListener) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n  }\n\n  async getAccount() {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) this.#provider = window.ethereum;\n    return this.#provider;\n  }\n\n  async getSigner() {\n    const provider = this.getProvider();\n    const account = await this.getAccount();\n    return new Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      if (this.options?.shimDisconnect && typeof localStorage !== 'undefined' && !localStorage.getItem(shimKey)) return false;\n      const provider = this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      const chains = [...this.chains, ...allChains];\n      return chains.find(x => x.id === chainId);\n    } catch (error) {\n      // Indicates chain is not added to MetaMask\n      if (error.code === 4902) {\n        try {\n          const chain = this.chains.find(x => x.id === chainId);\n          if (!chain) throw new ChainNotConfiguredError();\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: chain.rpcUrls,\n              blockExplorerUrls: chain.blockExplorers?.map(x => x.url)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          throw new AddChainError();\n        }\n      } else if (error.code === 4001) throw new UserRejectedRequestError();else throw new SwitchChainError();\n    }\n  }\n\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    await provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  onAccountsChanged = accounts => {\n    if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n      account: getAddress(accounts[0])\n    });\n  };\n  onChainChanged = chainId => {\n    const id = normalizeChainId(chainId);\n    const unsupported = this.isChainUnsupported(id);\n    this.emit('change', {\n      chain: {\n        id,\n        unsupported\n      }\n    });\n  };\n  onDisconnect = () => {\n    this.emit('disconnect');\n    if (this.options?.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n  };\n}\n\nconst balanceAction = async ({\n  chains = [...defaultChains, ...defaultL2Chains],\n  config,\n  provider\n}) => {\n  const unit = config.formatUnits ?? 'ether';\n\n  if (config.token) {\n    const contract = new ethers.Contract(config.token, erc20ABI, provider);\n    const [value, decimals, symbol] = await Promise.all([contract.balanceOf(config.addressOrName), contract.decimals(), contract.symbol()]);\n    return {\n      decimals,\n      formatted: utils.formatUnits(value, unit),\n      symbol,\n      unit,\n      value\n    };\n  }\n\n  const value = await provider.getBalance(config.addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: chain?.nativeCurrency?.decimals ?? 18,\n    formatted: utils.formatUnits(value, unit),\n    symbol: chain?.nativeCurrency?.symbol ?? 'ETH',\n    unit,\n    value\n  };\n};\n\nexport { InjectedConnector, balanceAction, erc1155ABI, erc20ABI, erc721ABI, units };\n"]},"metadata":{},"sourceType":"module"}