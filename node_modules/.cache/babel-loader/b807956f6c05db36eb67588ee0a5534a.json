{"ast":null,"code":"import * as React from 'react';\nimport { getDefaultProvider } from '@ethersproject/providers';\nimport { balanceAction, defaultChains, defaultL2Chains, ConnectorAlreadyConnectedError, allChains, SwitchChainError, ConnectorNotFoundError, UserRejectedRequestError, erc20ABI, InjectedConnector } from 'wagmi-core';\nexport { AddChainError, ChainNotConfiguredError, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, InjectedConnector, SwitchChainError, UserRejectedRequestError, allChains, chain, defaultChains, defaultL2Chains, developmentChains, erc1155ABI, erc20ABI, erc721ABI, normalizeChainId } from 'wagmi-core';\nimport { utils, Contract, ethers } from 'ethers';\n\nconst useProvider = () => {\n  const {\n    state\n  } = useContext();\n  return state.provider;\n};\n\nconst useWebSocketProvider = () => {\n  const {\n    state\n  } = useContext();\n  return state.webSocketProvider;\n};\n\nconst useCacheBuster = () => {\n  const context = useContext();\n  return context.state.cacheBuster;\n};\n\nconst useCancel = () => {\n  const cancelCallback = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      var _cancelCallback$curre;\n\n      return (_cancelCallback$curre = cancelCallback.current) === null || _cancelCallback$curre === void 0 ? void 0 : _cancelCallback$curre.call(cancelCallback);\n    };\n  }, []);\n  const cancel = React.useCallback(callback => {\n    var _cancelCallback$curre2;\n\n    (_cancelCallback$curre2 = cancelCallback.current) === null || _cancelCallback$curre2 === void 0 ? void 0 : _cancelCallback$curre2.call(cancelCallback);\n    if (callback) cancelCallback.current = callback;\n  }, []);\n  return cancel;\n};\n\nconst useLocalStorage = function (key) {\n  let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const [value, setValue] = React.useState(() => {\n    if (typeof localStorage === 'undefined') return defaultState;\n    const value = localStorage.getItem(key);\n\n    try {\n      return value ? JSON.parse(value) : defaultState;\n    } catch (error) {\n      console.warn(error);\n      return defaultState;\n    }\n  });\n  const setLocalStorage = React.useCallback(newValue => {\n    if (newValue === value) return;\n    setValue(newValue);\n    if (newValue === null) localStorage.removeItem(key);else localStorage.setItem(key, JSON.stringify(newValue));\n\n    if (newValue === null) {\n      localStorage.removeItem(key);\n    } else {\n      try {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [value, setValue, key]);\n  return [value, setLocalStorage];\n};\n\nconst initialState$g = {\n  loading: false\n};\n\nconst useEnsAvatar = function () {\n  let {\n    addressOrName,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$g);\n  const cancelQuery = useCancel();\n  const getEnsAvatar = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        addressOrName\n      };\n      if (!config_.addressOrName) throw new Error('addressOrName is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const avatar = await provider.getAvatar(config_.addressOrName);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          avatar,\n          loading: false\n        }));\n      }\n\n      return avatar;\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return error;\n    }\n  }, [addressOrName, cancelQuery, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !addressOrName) return;\n    getEnsAvatar({\n      addressOrName\n    });\n    return cancelQuery;\n  }, [addressOrName, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.avatar,\n    loading: state.loading,\n    error: state.error\n  }, getEnsAvatar];\n};\n\nconst initialState$f = {\n  loading: false\n};\n\nconst useEnsLookup = function () {\n  let {\n    address,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$f);\n  const cancelQuery = useCancel();\n  const lookupAddress = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        address\n      };\n      if (!config_.address) throw new Error('address is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const ens = await provider.lookupAddress(config_.address);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          ens,\n          loading: false\n        }));\n      }\n\n      return {\n        data: ens,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [address, cancelQuery, provider]); // Resolve name when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !address) return;\n    lookupAddress({\n      address\n    });\n    return cancelQuery;\n  }, [address, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.ens,\n    loading: state.loading,\n    error: state.error\n  }, lookupAddress];\n};\n\nconst initialState$e = {\n  loading: false\n};\n\nconst useEnsResolveName = function () {\n  let {\n    name,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$e);\n  const cancelQuery = useCancel();\n  const resolveName = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        name\n      };\n      if (!config_.name) throw new Error('name is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const address = await provider.resolveName(config_.name);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          address,\n          loading: false\n        }));\n      }\n\n      return {\n        data: address,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [name, cancelQuery, provider]); // Resolve name when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !name) return;\n    resolveName({\n      name\n    });\n    return cancelQuery;\n  }, [name, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.address,\n    loading: state.loading,\n    error: state.error\n  }, resolveName];\n};\n\nconst initialState$d = {\n  loading: false\n};\n\nconst useEnsResolver = function () {\n  let {\n    name,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$d);\n  const cancelQuery = useCancel();\n  const getEnsResolver = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        name\n      };\n      if (!config_.name) throw new Error('name is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const resolver = await provider.getResolver(config_.name);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          resolver\n        }));\n      }\n\n      return {\n        data: resolver,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, name, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !name) return;\n    getEnsResolver({\n      name\n    });\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, name, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.resolver,\n    loading: state.loading,\n    error: state.error\n  }, getEnsResolver];\n};\n\nconst useAccount = function () {\n  var _globalState$data;\n\n  let {\n    fetchEns\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: globalState,\n    setState\n  } = useContext();\n  const address = (_globalState$data = globalState.data) === null || _globalState$data === void 0 ? void 0 : _globalState$data.account;\n  const [{\n    data: ens,\n    error: ensError,\n    loading: ensLoading\n  }] = useEnsLookup({\n    address,\n    skip: !fetchEns\n  });\n  const [{\n    data: avatar,\n    error: avatarError,\n    loading: avatarLoading\n  }] = useEnsAvatar({\n    addressOrName: ens,\n    skip: !fetchEns || !ens\n  });\n  const disconnect = React.useCallback(() => {\n    setState(x => {\n      var _x$connector;\n\n      (_x$connector = x.connector) === null || _x$connector === void 0 ? void 0 : _x$connector.disconnect();\n      return {\n        cacheBuster: x.cacheBuster + 1\n      };\n    });\n  }, [setState]);\n  const error = ensError || avatarError;\n  const loading = ensLoading || avatarLoading;\n  return [{\n    data: address ? {\n      address,\n      connector: globalState.connector,\n      ens: ens ? {\n        avatar,\n        name: ens\n      } : undefined\n    } : undefined,\n    error,\n    loading\n  }, disconnect];\n};\n\nconst initialState$c = {\n  loading: false\n};\n\nconst useBlockNumber = function () {\n  let {\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const webSocketProvider = useWebSocketProvider();\n  const [state, setState] = React.useState(initialState$c);\n  const cancelQuery = useCancel();\n  const getBlockNumber = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const blockNumber = await provider.getBlockNumber();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          blockNumber,\n          loading: false\n        }));\n      }\n\n      return {\n        data: blockNumber,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, provider]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getBlockNumber();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    let didCancel = false;\n\n    const listener = blockNumber => {\n      // Just to be safe in case the provider implementation\n      // calls the event callback after .off() has been called\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          blockNumber\n        }));\n      }\n    };\n\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      didCancel = true;\n      provider_.off('block', listener);\n    };\n  }, [provider, watch, webSocketProvider]);\n  return [{\n    data: state.blockNumber,\n    error: state.error,\n    loading: state.loading\n  }, getBlockNumber];\n};\n\nconst initialState$b = {\n  loading: false\n};\n\nconst useFeeData = function () {\n  let {\n    formatUnits = 'wei',\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider();\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const cacheBuster = useCacheBuster();\n  const [state, setState] = React.useState(initialState$b);\n  const cancelQuery = useCancel();\n  const getFeeData = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const feeData = await provider.getFeeData();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          feeData,\n          loading: false\n        }));\n      }\n\n      return {\n        data: feeData,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, provider]); // Fetch feeData on mount or when chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getFeeData();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch || !blockNumber) return;\n    getFeeData();\n    return cancelQuery;\n  }, [blockNumber, cancelQuery, getFeeData, watch]);\n  const formatted = state.feeData ? {\n    gasPrice: utils.formatUnits(state.feeData.gasPrice, formatUnits),\n    maxFeePerGas: utils.formatUnits(state.feeData.maxFeePerGas, formatUnits),\n    maxPriorityFeePerGas: utils.formatUnits(state.feeData.maxPriorityFeePerGas, formatUnits)\n  } : undefined;\n  return [{\n    data: state.feeData ? { ...state.feeData,\n      formatted\n    } : undefined,\n    loading: state.loading,\n    error: state.error\n  }, getFeeData];\n};\n\nconst initialState$a = {\n  loading: false\n};\n\nconst useBalance = function () {\n  let {\n    addressOrName,\n    formatUnits = 'ether',\n    skip,\n    token,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const [state, setState] = React.useState(initialState$a);\n  const cancelQuery = useCancel();\n  const getBalance = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      var _connector$chains;\n\n      const config_ = config !== null && config !== void 0 ? config : {\n        addressOrName,\n        formatUnits,\n        token\n      };\n      if (!config_.addressOrName) throw new Error('address is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const balance = await balanceAction({\n        chains: [...((_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : []), ...defaultChains, ...defaultL2Chains],\n        config: config_,\n        provider\n      });\n      if (!didCancel) setState(x => ({ ...x,\n        balance,\n        loading: false\n      }));\n      return {\n        data: balance,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n      if (!didCancel) setState(x => ({ ...x,\n        error,\n        loading: false\n      }));\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [addressOrName, cancelQuery, connector, formatUnits, provider, token]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !addressOrName) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n    return cancelQuery;\n  }, [addressOrName, cacheBuster, cancelQuery, skip, token]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n  }, [blockNumber]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.balance,\n    error: state.error,\n    loading: state.loading\n  }, getBalance];\n};\n\nconst initialState$9 = {\n  loading: false\n};\n\nconst useConnect = () => {\n  var _globalState$data;\n\n  const {\n    state: globalState,\n    setState: setGlobalState,\n    setLastUsedConnector\n  } = useContext();\n  const [state, setState] = React.useState(initialState$9);\n  const cancelQuery = useCancel();\n  const connect = React.useCallback(async connector => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const activeConnector = globalState === null || globalState === void 0 ? void 0 : globalState.connector;\n      if (connector === activeConnector) throw new ConnectorAlreadyConnectedError();\n      setState(x => ({ ...x,\n        loading: true,\n        connector,\n        error: undefined\n      }));\n      const data = await connector.connect();\n\n      if (!didCancel) {\n        // Update connector globally only after successful connection\n        setGlobalState(x => ({ ...x,\n          connector,\n          data\n        }));\n        setLastUsedConnector(connector.name);\n        setState(x => ({ ...x,\n          loading: false\n        }));\n      }\n\n      return {\n        data,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          connector: undefined,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, globalState.connector, setGlobalState, setLastUsedConnector]); // Keep connector in sync with global connector\n\n  React.useEffect(() => {\n    setState(x => ({ ...x,\n      connector: globalState.connector,\n      error: undefined\n    }));\n    return cancelQuery;\n  }, [cancelQuery, globalState.connector]);\n  return [{\n    data: {\n      connected: !!((_globalState$data = globalState.data) !== null && _globalState$data !== void 0 && _globalState$data.account),\n      connector: state.connector,\n      connectors: globalState.connectors\n    },\n    error: state.error,\n    loading: state.loading || globalState.connecting\n  }, connect];\n};\n\nconst initialState$8 = {\n  loading: false\n};\n\nconst useNetwork = () => {\n  var _data$chain, _data$chain2, _connector$chains;\n\n  const {\n    state: {\n      connector,\n      data\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$8);\n  const chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id;\n  const unsupported = data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.unsupported;\n  const activeChains = (_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : [];\n  const activeChain = [...activeChains, ...allChains].find(x => x.id === chainId);\n  const cancelQuery = useCancel();\n  const switchNetwork = React.useCallback(async chainId => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n    if (!(connector !== null && connector !== void 0 && connector.switchChain)) return {\n      data: undefined,\n      error: new SwitchChainError()\n    };\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const chain = await connector.switchChain(chainId);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false\n        }));\n      }\n\n      return {\n        data: chain,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector]);\n  return [{\n    data: {\n      chain: chainId ? { ...activeChain,\n        id: chainId,\n        unsupported\n      } : undefined,\n      chains: activeChains\n    },\n    error: state.error,\n    loading: state.loading\n  }, connector !== null && connector !== void 0 && connector.switchChain ? switchNetwork : undefined];\n};\n\nconst initialState$7 = {\n  data: undefined,\n  error: undefined,\n  loading: false\n};\n\nconst useSigner = function () {\n  let {\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$7);\n  const cancelQuery = useCancel();\n  const getSigner = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await (connector === null || connector === void 0 ? void 0 : connector.getSigner());\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          data: signer,\n          loading: false\n        }));\n      }\n\n      return signer;\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          data: undefined,\n          error,\n          loading: false\n        }));\n      }\n    }\n  }, [cancelQuery, connector]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getSigner();\n    return cancelQuery;\n  }, [cacheBuster, connector, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [state, getSigner];\n};\n\nconst initialState$6 = {\n  loading: false\n};\n\nconst useSignMessage = function () {\n  let {\n    message\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$6);\n  const cancelQuery = useCancel();\n  const signMessage = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        message\n      };\n      if (!config_.message) throw new Error('message is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await connector.getSigner();\n      const signature = await signer.signMessage(config_.message);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          signature,\n          loading: false\n        }));\n      }\n\n      return {\n        data: signature,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, message]);\n  return [{\n    data: state.signature,\n    error: state.error,\n    loading: state.loading\n  }, signMessage];\n};\n\nconst initialState$5 = {\n  loading: false\n};\n\nconst useSignTypedData = function () {\n  let {\n    domain,\n    types,\n    value\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$5);\n  const cancelQuery = useCancel();\n  const signTypedData = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        domain,\n        types,\n        value\n      };\n      if (!config_.domain) throw new Error('domain is required');\n      if (!config_.types) throw new Error('type is required');\n      if (!config_.value) throw new Error('value is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await connector.getSigner(); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n      const signature = await signer._signTypedData(config_.domain, config_.types, config_.value);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          signature,\n          loading: false\n        }));\n      }\n\n      return {\n        data: signature,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, domain, types, value]);\n  return [{\n    data: state.signature,\n    error: state.error,\n    loading: state.loading\n  }, signTypedData];\n};\n\nconst getContract = _ref => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new Contract(addressOrName, contractInterface, signerOrProvider);\n};\n\nconst useContract = _ref2 => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref2;\n  return React.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nconst useContractEvent = function (contractConfig, eventName, listener) {\n  let {\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const provider = useProvider();\n  const webSocketProvider = useWebSocketProvider();\n  const contract = useContract({\n    signerOrProvider: webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider,\n    ...contractConfig\n  });\n  const listenerRef = React.useRef(listener);\n  listenerRef.current = listener;\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    const handler = function () {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    const contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n    };\n  }, [contract, eventName]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n};\n\nconst initialState$4 = {\n  loading: false\n};\n\nconst useContractRead = function (contractConfig, functionName) {\n  let {\n    args,\n    overrides,\n    skip,\n    watch\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const contract = useContract({\n    signerOrProvider: provider,\n    ...contractConfig\n  });\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const [state, setState] = React.useState(initialState$4);\n  const cancelQuery = useCancel();\n  const read = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        args,\n        overrides\n      };\n      const params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true,\n        response: undefined\n      }));\n      const response = await contract[functionName](...params);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          response\n        }));\n      }\n\n      return {\n        data: response,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [args, cancelQuery, contract, functionName, overrides]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    read();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    read();\n    return cancelQuery;\n  }, [blockNumber, cancelQuery, watch]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, read];\n};\n\nconst initialState$3 = {\n  loading: false\n};\n\nconst useContractWrite = function (contractConfig, functionName) {\n  let {\n    args,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const contract = useContract(contractConfig);\n  const [state, setState] = React.useState(initialState$3);\n  const cancelQuery = useCancel();\n  const write = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        args,\n        overrides\n      };\n      if (!connector) throw new ConnectorNotFoundError();\n      const params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true,\n        response: undefined\n      }));\n      const signer = await connector.getSigner();\n      const contract_ = contract.connect(signer);\n      const response = await contract_[functionName](...params);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          response\n        }));\n      }\n\n      return {\n        data: response,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [args, cancelQuery, connector, contract, functionName, overrides]);\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, write];\n};\n\nconst initialState$2 = {\n  loading: false\n};\n\nconst useToken = function () {\n  let {\n    address,\n    formatUnits = 'ether',\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$2);\n  const cancelQuery = useCancel();\n  const getToken = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      var _config_$formatUnits;\n\n      const config_ = config !== null && config !== void 0 ? config : {\n        address,\n        formatUnits\n      };\n      if (!config_.address) throw new Error('address is required');\n      const contract = new ethers.Contract(config_.address, erc20ABI, provider);\n      const formatUnits_ = (_config_$formatUnits = config_.formatUnits) !== null && _config_$formatUnits !== void 0 ? _config_$formatUnits : 'ether';\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const [symbol, decimals, totalSupply] = await Promise.all([contract.symbol(), contract.decimals(), contract.totalSupply()]);\n      const token = {\n        address: config_.address,\n        decimals,\n        symbol,\n        totalSupply: {\n          formatted: utils.formatUnits(totalSupply, formatUnits_),\n          value: totalSupply\n        }\n      };\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          token,\n          loading: false\n        }));\n      }\n\n      return {\n        data: token,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [address, cancelQuery, formatUnits, provider]);\n  const watchToken = React.useCallback(async token => {\n    if (!(connector !== null && connector !== void 0 && connector.watchAsset)) return false;\n\n    try {\n      await connector.watchAsset(token);\n      return true;\n    } catch (error) {\n      return error;\n    }\n  }, [connector]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !address) return;\n    getToken({\n      address,\n      formatUnits\n    });\n    return cancelQuery;\n  }, [address, cancelQuery, formatUnits, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.token ? { ...state.token,\n      address\n    } : undefined,\n    error: state.error,\n    loading: state.loading\n  }, watchToken, getToken];\n};\n\nconst initialState$1 = {\n  loading: false\n};\n\nconst useTransaction = function () {\n  let {\n    request\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$1);\n  const cancelQuery = useCancel();\n  const sendTransaction = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        request\n      };\n      if (!config_.request) throw new Error('request is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        loading: true\n      }));\n      const signer = await connector.getSigner();\n      const transaction = await signer.sendTransaction(config_.request);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          transaction\n        }));\n      }\n\n      return {\n        data: transaction,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, request]);\n  return [{\n    data: state.transaction,\n    error: state.error,\n    loading: state.loading\n  }, sendTransaction];\n};\n\nconst initialState = {\n  loading: false\n};\n\nconst useWaitForTransaction = function () {\n  let {\n    confirmations,\n    hash,\n    skip,\n    timeout,\n    wait: wait_\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState);\n  const cancelQuery = useCancel();\n  const wait = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        confirmations,\n        hash,\n        timeout,\n        wait: wait_\n      };\n      if (!config_.hash && !config_.wait) throw new Error('hash or wait is required');\n      let promise; // eslint-disable-next-line testing-library/await-async-utils\n\n      if (config_.wait) promise = config_.wait(config_.confirmations);else if (config_.hash) promise = provider.waitForTransaction(config_.hash, config_.confirmations, config_.timeout);else throw new Error('hash or wait is required');\n      setState(x => ({ ...x,\n        loading: true\n      }));\n      const receipt = await promise;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          receipt\n        }));\n      }\n\n      return {\n        data: receipt,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, confirmations, hash, provider, timeout, wait_]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !hash && !wait_) return;\n    /* eslint-disable testing-library/await-async-utils */\n\n    wait({\n      confirmations,\n      hash,\n      timeout,\n      wait: wait_\n    });\n    /* eslint-enable testing-library/await-async-utils */\n\n    return cancelQuery;\n  }, [cancelQuery, hash, skip, wait_]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.receipt,\n    error: state.error,\n    loading: state.loading\n  }, wait];\n};\n\nconst Context = /*#__PURE__*/React.createContext(null);\n\nconst Provider = _ref => {\n  var _state$data2, _state$data2$chain, _state$data4, _state$data4$chain, _state$data6, _state$data6$chain;\n\n  let {\n    autoConnect = false,\n    children,\n    connectors: connectors_ = [new InjectedConnector()],\n    connectorStorageKey = 'wagmi.wallet',\n    provider: provider_ = getDefaultProvider(),\n    webSocketProvider: webSocketProvider_\n  } = _ref;\n  const [lastUsedConnector, setLastUsedConnector] = useLocalStorage(connectorStorageKey);\n  const [state, setState] = React.useState({\n    cacheBuster: 1,\n    connecting: autoConnect\n  });\n  const connectors = React.useMemo(() => {\n    var _state$data, _state$data$chain;\n\n    if (typeof connectors_ !== 'function') return connectors_;\n    return connectors_({\n      chainId: (_state$data = state.data) === null || _state$data === void 0 ? void 0 : (_state$data$chain = _state$data.chain) === null || _state$data$chain === void 0 ? void 0 : _state$data$chain.id\n    });\n  }, [connectors_, (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : (_state$data2$chain = _state$data2.chain) === null || _state$data2$chain === void 0 ? void 0 : _state$data2$chain.id]);\n  const provider = React.useMemo(() => {\n    var _state$data3, _state$data3$chain;\n\n    if (typeof provider_ !== 'function') return provider_;\n    return provider_({\n      chainId: (_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : (_state$data3$chain = _state$data3.chain) === null || _state$data3$chain === void 0 ? void 0 : _state$data3$chain.id,\n      connector: state.connector\n    });\n  }, [provider_, (_state$data4 = state.data) === null || _state$data4 === void 0 ? void 0 : (_state$data4$chain = _state$data4.chain) === null || _state$data4$chain === void 0 ? void 0 : _state$data4$chain.id, state.connector]);\n  const webSocketProvider = React.useMemo(() => {\n    var _state$data5, _state$data5$chain;\n\n    if (!webSocketProvider_) return undefined;\n    if (typeof webSocketProvider_ !== 'function') return webSocketProvider_;\n    return webSocketProvider_({\n      chainId: (_state$data5 = state.data) === null || _state$data5 === void 0 ? void 0 : (_state$data5$chain = _state$data5.chain) === null || _state$data5$chain === void 0 ? void 0 : _state$data5$chain.id,\n      connector: state.connector\n    });\n  }, [webSocketProvider_, (_state$data6 = state.data) === null || _state$data6 === void 0 ? void 0 : (_state$data6$chain = _state$data6.chain) === null || _state$data6$chain === void 0 ? void 0 : _state$data6$chain.id, state.connector]); // Attempt to connect on mount\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!autoConnect) return;\n\n    (async () => {\n      setState(x => ({ ...x,\n        connecting: true\n      }));\n      const sorted = lastUsedConnector ? [...connectors].sort(x => x.name === lastUsedConnector ? -1 : 1) : connectors;\n\n      for (const connector of sorted) {\n        if (!connector.ready || !connector.isAuthorized) continue;\n        const isAuthorized = await connector.isAuthorized();\n        if (!isAuthorized) continue;\n        const data = await connector.connect();\n        setState(x => ({ ...x,\n          connector,\n          data\n        }));\n        break;\n      }\n\n      setState(x => ({ ...x,\n        connecting: false\n      }));\n    })();\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  // Make sure connectors close\n\n  React.useEffect(() => {\n    return () => {\n      if (!state.connector) return;\n      state.connector.disconnect();\n    };\n  }, [state.connector]); // Watch connector for events\n\n  React.useEffect(() => {\n    if (!state.connector) return;\n\n    const onChange = data => setState(x => ({ ...x,\n      cacheBuster: x.cacheBuster + 1,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n\n    const onDisconnect = () => setState({\n      cacheBuster: 1\n    });\n\n    const onError = error => setState(x => ({ ...x,\n      error\n    }));\n\n    state.connector.on('change', onChange);\n    state.connector.on('disconnect', onDisconnect);\n    state.connector.on('error', onError);\n    return () => {\n      if (!state.connector) return;\n      state.connector.off('change', onChange);\n      state.connector.off('disconnect', onDisconnect);\n      state.connector.off('error', onError);\n    };\n  }, [state.connector]);\n  const value = {\n    state: {\n      cacheBuster: state.cacheBuster,\n      connecting: state.connecting,\n      connectors,\n      connector: state.connector,\n      data: state.data,\n      provider,\n      webSocketProvider\n    },\n    setState,\n    setLastUsedConnector\n  };\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value\n  }, children);\n};\n\nconst useContext = () => {\n  const context = React.useContext(Context);\n  if (!context) throw Error('Must be used within Provider');\n  return context;\n};\n\nexport { Context, Provider, Provider as WagmiProvider, useAccount, useBalance, useBlockNumber, useConnect, useContext, useContract, useContractEvent, useContractRead, useContractWrite, useEnsAvatar, useEnsLookup, useEnsResolveName, useEnsResolver, useFeeData, useNetwork, useProvider, useSignMessage, useSignTypedData, useSigner, useToken, useTransaction, useWaitForTransaction, useWebSocketProvider };","map":{"version":3,"sources":["/Users/macbook/Documents/nft-remix/node_modules/wagmi/dist/wagmi.esm.js"],"names":["React","getDefaultProvider","balanceAction","defaultChains","defaultL2Chains","ConnectorAlreadyConnectedError","allChains","SwitchChainError","ConnectorNotFoundError","UserRejectedRequestError","erc20ABI","InjectedConnector","AddChainError","ChainNotConfiguredError","Connector","chain","developmentChains","erc1155ABI","erc721ABI","normalizeChainId","utils","Contract","ethers","useProvider","state","useContext","provider","useWebSocketProvider","webSocketProvider","useCacheBuster","context","cacheBuster","useCancel","cancelCallback","useRef","useEffect","_cancelCallback$curre","current","call","cancel","useCallback","callback","_cancelCallback$curre2","useLocalStorage","key","defaultState","arguments","length","undefined","value","setValue","useState","localStorage","getItem","JSON","parse","error","console","warn","setLocalStorage","newValue","removeItem","setItem","stringify","initialState$g","loading","useEnsAvatar","addressOrName","skip","setState","cancelQuery","getEnsAvatar","config","didCancel","config_","Error","x","avatar","getAvatar","error_","data","initialState$f","useEnsLookup","address","lookupAddress","ens","initialState$e","useEnsResolveName","name","resolveName","initialState$d","useEnsResolver","getEnsResolver","resolver","getResolver","useAccount","_globalState$data","fetchEns","globalState","account","ensError","ensLoading","avatarError","avatarLoading","disconnect","_x$connector","connector","initialState$c","useBlockNumber","watch","getBlockNumber","blockNumber","listener","provider_","on","off","initialState$b","useFeeData","formatUnits","getFeeData","feeData","formatted","gasPrice","maxFeePerGas","maxPriorityFeePerGas","initialState$a","useBalance","token","getBalance","_connector$chains","balance","chains","initialState$9","useConnect","setGlobalState","setLastUsedConnector","connect","activeConnector","connected","connectors","connecting","initialState$8","useNetwork","_data$chain","_data$chain2","chainId","id","unsupported","activeChains","activeChain","find","switchNetwork","switchChain","initialState$7","useSigner","getSigner","signer","initialState$6","useSignMessage","message","signMessage","signature","code","initialState$5","useSignTypedData","domain","types","signTypedData","_signTypedData","getContract","_ref","contractInterface","signerOrProvider","useContract","_ref2","useMemo","useContractEvent","contractConfig","eventName","once","contract","listenerRef","handler","_len","event","Array","_key","contract_","initialState$4","useContractRead","functionName","args","overrides","read","params","isArray","response","initialState$3","useContractWrite","write","initialState$2","useToken","getToken","_config_$formatUnits","formatUnits_","symbol","decimals","totalSupply","Promise","all","watchToken","watchAsset","initialState$1","useTransaction","request","sendTransaction","transaction","initialState","useWaitForTransaction","confirmations","hash","timeout","wait","wait_","promise","waitForTransaction","receipt","Context","createContext","Provider","_state$data2","_state$data2$chain","_state$data4","_state$data4$chain","_state$data6","_state$data6$chain","autoConnect","children","connectors_","connectorStorageKey","webSocketProvider_","lastUsedConnector","_state$data","_state$data$chain","_state$data3","_state$data3$chain","_state$data5","_state$data5$chain","sorted","sort","ready","isAuthorized","onChange","onDisconnect","onError","createElement","WagmiProvider"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,eAAvC,EAAwDC,8BAAxD,EAAwFC,SAAxF,EAAmGC,gBAAnG,EAAqHC,sBAArH,EAA6IC,wBAA7I,EAAuKC,QAAvK,EAAiLC,iBAAjL,QAA0M,YAA1M;AACA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,SAAjD,EAA4DT,8BAA5D,EAA4FG,sBAA5F,EAAoHG,iBAApH,EAAuIJ,gBAAvI,EAAyJE,wBAAzJ,EAAmLH,SAAnL,EAA8LS,KAA9L,EAAqMZ,aAArM,EAAoNC,eAApN,EAAqOY,iBAArO,EAAwPC,UAAxP,EAAoQP,QAApQ,EAA8QQ,SAA9Q,EAAyRC,gBAAzR,QAAiT,YAAjT;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,QAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AACJC,IAAAA;AADI,MAEFC,UAAU,EAFd;AAGA,SAAOD,KAAK,CAACE,QAAb;AACD,CALD;;AAOA,MAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAM;AACJH,IAAAA;AADI,MAEFC,UAAU,EAFd;AAGA,SAAOD,KAAK,CAACI,iBAAb;AACD,CALD;;AAOA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,SAAOK,OAAO,CAACN,KAAR,CAAcO,WAArB;AACD,CAHD;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,cAAc,GAAGjC,KAAK,CAACkC,MAAN,CAAa,IAAb,CAAvB;AACAlC,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACX,UAAIC,qBAAJ;;AAEA,aAAO,CAACA,qBAAqB,GAAGH,cAAc,CAACI,OAAxC,MAAqD,IAArD,IAA6DD,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAACE,IAAtB,CAA2BL,cAA3B,CAAhH;AACD,KAJD;AAKD,GAND,EAMG,EANH;AAOA,QAAMM,MAAM,GAAGvC,KAAK,CAACwC,WAAN,CAAkBC,QAAQ,IAAI;AAC3C,QAAIC,sBAAJ;;AAEA,KAACA,sBAAsB,GAAGT,cAAc,CAACI,OAAzC,MAAsD,IAAtD,IAA8DK,sBAAsB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,sBAAsB,CAACJ,IAAvB,CAA4BL,cAA5B,CAA3G;AACA,QAAIQ,QAAJ,EAAcR,cAAc,CAACI,OAAf,GAAyBI,QAAzB;AACf,GALc,EAKZ,EALY,CAAf;AAMA,SAAOF,MAAP;AACD,CAhBD;;AAkBA,MAAMI,eAAe,GAAG,UAAUC,GAAV,EAAe;AACrC,MAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAvF;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlD,KAAK,CAACmD,QAAN,CAAe,MAAM;AAC7C,QAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC,OAAOP,YAAP;AACzC,UAAMI,KAAK,GAAGG,YAAY,CAACC,OAAb,CAAqBT,GAArB,CAAd;;AAEA,QAAI;AACF,aAAOK,KAAK,GAAGK,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAH,GAAuBJ,YAAnC;AACD,KAFD,CAEE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,aAAOX,YAAP;AACD;AACF,GAVyB,CAA1B;AAWA,QAAMc,eAAe,GAAG3D,KAAK,CAACwC,WAAN,CAAkBoB,QAAQ,IAAI;AACpD,QAAIA,QAAQ,KAAKX,KAAjB,EAAwB;AACxBC,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACA,QAAIA,QAAQ,KAAK,IAAjB,EAAuBR,YAAY,CAACS,UAAb,CAAwBjB,GAAxB,EAAvB,KAAyDQ,YAAY,CAACU,OAAb,CAAqBlB,GAArB,EAA0BU,IAAI,CAACS,SAAL,CAAeH,QAAf,CAA1B;;AAEzD,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrBR,MAAAA,YAAY,CAACS,UAAb,CAAwBjB,GAAxB;AACD,KAFD,MAEO;AACL,UAAI;AACFQ,QAAAA,YAAY,CAACU,OAAb,CAAqBlB,GAArB,EAA0BU,IAAI,CAACS,SAAL,CAAeH,QAAf,CAA1B;AACD,OAFD,CAEE,OAAOJ,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAduB,EAcrB,CAACP,KAAD,EAAQC,QAAR,EAAkBN,GAAlB,CAdqB,CAAxB;AAeA,SAAO,CAACK,KAAD,EAAQU,eAAR,CAAP;AACD,CA7BD;;AA+BA,MAAMK,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMC,YAAY,GAAG,YAAY;AAC/B,MAAI;AACFC,IAAAA,aADE;AAEFC,IAAAA;AAFE,MAGAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAea,cAAf,CAA1B;AACA,QAAMM,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuC,YAAY,GAAGvE,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACrD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DL,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAACO,OAAO,CAACP,aAAb,EAA4B,MAAM,IAAIQ,KAAJ,CAAU,2BAAV,CAAN;AAC5BN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMY,MAAM,GAAG,MAAMnD,QAAQ,CAACoD,SAAT,CAAmBJ,OAAO,CAACP,aAA3B,CAArB;;AAEA,UAAI,CAACM,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbC,UAAAA,MADa;AAEbZ,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAOY,MAAP;AACD,KAnBD,CAmBE,OAAOE,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAOT,KAAP;AACD;AACF,GArCoB,EAqClB,CAACW,aAAD,EAAgBG,WAAhB,EAA6B5C,QAA7B,CArCkB,CAArB,CAT+B,CA8Ca;;AAE5C;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACD,aAAb,EAA4B;AAC5BI,IAAAA,YAAY,CAAC;AACXJ,MAAAA;AADW,KAAD,CAAZ;AAGA,WAAOG,WAAP;AACD,GAND,EAMG,CAACH,aAAD,EAAgBpC,WAAhB,EAA6BuC,WAA7B,EAA0CF,IAA1C,CANH;AAOA;;AAEA,SAAO,CAAC;AACNY,IAAAA,IAAI,EAAExD,KAAK,CAACqD,MADN;AAENZ,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAFT;AAGNT,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AAHP,GAAD,EAIJe,YAJI,CAAP;AAKD,CAhED;;AAkEA,MAAMU,cAAc,GAAG;AACrBhB,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMiB,YAAY,GAAG,YAAY;AAC/B,MAAI;AACFC,IAAAA,OADE;AAEFf,IAAAA;AAFE,MAGAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAe8B,cAAf,CAA1B;AACA,QAAMX,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMoD,aAAa,GAAGpF,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACtD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DW,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAACT,OAAO,CAACS,OAAb,EAAsB,MAAM,IAAIR,KAAJ,CAAU,qBAAV,CAAN;AACtBN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMoB,GAAG,GAAG,MAAM3D,QAAQ,CAAC0D,aAAT,CAAuBV,OAAO,CAACS,OAA/B,CAAlB;;AAEA,UAAI,CAACV,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbS,UAAAA,GADa;AAEbpB,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEK,GADD;AAEL7B,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAtBD,CAsBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA3CqB,EA2CnB,CAAC2B,OAAD,EAAUb,WAAV,EAAuB5C,QAAvB,CA3CmB,CAAtB,CAT+B,CAoDO;;AAEtC;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACe,OAAb,EAAsB;AACtBC,IAAAA,aAAa,CAAC;AACZD,MAAAA;AADY,KAAD,CAAb;AAGA,WAAOb,WAAP;AACD,GAND,EAMG,CAACa,OAAD,EAAUpD,WAAV,EAAuBuC,WAAvB,EAAoCF,IAApC,CANH;AAOA;;AAEA,SAAO,CAAC;AACNY,IAAAA,IAAI,EAAExD,KAAK,CAAC6D,GADN;AAENpB,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAFT;AAGNT,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AAHP,GAAD,EAIJ4B,aAJI,CAAP;AAKD,CAtED;;AAwEA,MAAME,cAAc,GAAG;AACrBrB,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMsB,iBAAiB,GAAG,YAAY;AACpC,MAAI;AACFC,IAAAA,IADE;AAEFpB,IAAAA;AAFE,MAGAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAemC,cAAf,CAA1B;AACA,QAAMhB,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMyD,WAAW,GAAGzF,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACpD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DgB,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAACd,OAAO,CAACc,IAAb,EAAmB,MAAM,IAAIb,KAAJ,CAAU,kBAAV,CAAN;AACnBN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMkB,OAAO,GAAG,MAAMzD,QAAQ,CAAC+D,WAAT,CAAqBf,OAAO,CAACc,IAA7B,CAAtB;;AAEA,UAAI,CAACf,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbO,UAAAA,OADa;AAEblB,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEG,OADD;AAEL3B,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAtBD,CAsBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA3CmB,EA2CjB,CAACgC,IAAD,EAAOlB,WAAP,EAAoB5C,QAApB,CA3CiB,CAApB,CAToC,CAoDD;;AAEnC;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACoB,IAAb,EAAmB;AACnBC,IAAAA,WAAW,CAAC;AACVD,MAAAA;AADU,KAAD,CAAX;AAGA,WAAOlB,WAAP;AACD,GAND,EAMG,CAACkB,IAAD,EAAOzD,WAAP,EAAoBuC,WAApB,EAAiCF,IAAjC,CANH;AAOA;;AAEA,SAAO,CAAC;AACNY,IAAAA,IAAI,EAAExD,KAAK,CAAC2D,OADN;AAENlB,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAFT;AAGNT,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AAHP,GAAD,EAIJiC,WAJI,CAAP;AAKD,CAtED;;AAwEA,MAAMC,cAAc,GAAG;AACrBzB,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM0B,cAAc,GAAG,YAAY;AACjC,MAAI;AACFH,IAAAA,IADE;AAEFpB,IAAAA;AAFE,MAGAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeuC,cAAf,CAA1B;AACA,QAAMpB,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAM4D,cAAc,GAAG5F,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACvD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DgB,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAACd,OAAO,CAACc,IAAb,EAAmB,MAAM,IAAIb,KAAJ,CAAU,kBAAV,CAAN;AACnBN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM4B,QAAQ,GAAG,MAAMnE,QAAQ,CAACoE,WAAT,CAAqBpB,OAAO,CAACc,IAA7B,CAAvB;;AAEA,UAAI,CAACf,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE,KADI;AAEb4B,UAAAA;AAFa,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLb,QAAAA,IAAI,EAAEa,QADD;AAELrC,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAtBD,CAsBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA3CsB,EA2CpB,CAACc,WAAD,EAAckB,IAAd,EAAoB9D,QAApB,CA3CoB,CAAvB,CATiC,CAoDE;;AAEnC;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACoB,IAAb,EAAmB;AACnBI,IAAAA,cAAc,CAAC;AACbJ,MAAAA;AADa,KAAD,CAAd;AAGA,WAAOlB,WAAP;AACD,GAND,EAMG,CAACvC,WAAD,EAAcuC,WAAd,EAA2BkB,IAA3B,EAAiCpB,IAAjC,CANH;AAOA;;AAEA,SAAO,CAAC;AACNY,IAAAA,IAAI,EAAExD,KAAK,CAACqE,QADN;AAEN5B,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAFT;AAGNT,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AAHP,GAAD,EAIJoC,cAJI,CAAP;AAKD,CAtED;;AAwEA,MAAMG,UAAU,GAAG,YAAY;AAC7B,MAAIC,iBAAJ;;AAEA,MAAI;AACFC,IAAAA;AADE,MAEAnD,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAFxE;AAGA,QAAM;AACJtB,IAAAA,KAAK,EAAE0E,WADH;AAEJ7B,IAAAA;AAFI,MAGF5C,UAAU,EAHd;AAIA,QAAM0D,OAAO,GAAG,CAACa,iBAAiB,GAAGE,WAAW,CAAClB,IAAjC,MAA2C,IAA3C,IAAmDgB,iBAAiB,KAAK,KAAK,CAA9E,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAACG,OAA7H;AACA,QAAM,CAAC;AACLnB,IAAAA,IAAI,EAAEK,GADD;AAEL7B,IAAAA,KAAK,EAAE4C,QAFF;AAGLnC,IAAAA,OAAO,EAAEoC;AAHJ,GAAD,IAIDnB,YAAY,CAAC;AAChBC,IAAAA,OADgB;AAEhBf,IAAAA,IAAI,EAAE,CAAC6B;AAFS,GAAD,CAJjB;AAQA,QAAM,CAAC;AACLjB,IAAAA,IAAI,EAAEH,MADD;AAELrB,IAAAA,KAAK,EAAE8C,WAFF;AAGLrC,IAAAA,OAAO,EAAEsC;AAHJ,GAAD,IAIDrC,YAAY,CAAC;AAChBC,IAAAA,aAAa,EAAEkB,GADC;AAEhBjB,IAAAA,IAAI,EAAE,CAAC6B,QAAD,IAAa,CAACZ;AAFJ,GAAD,CAJjB;AAQA,QAAMmB,UAAU,GAAGxG,KAAK,CAACwC,WAAN,CAAkB,MAAM;AACzC6B,IAAAA,QAAQ,CAACO,CAAC,IAAI;AACZ,UAAI6B,YAAJ;;AAEA,OAACA,YAAY,GAAG7B,CAAC,CAAC8B,SAAlB,MAAiC,IAAjC,IAAyCD,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACD,UAAb,EAA5E;AACA,aAAO;AACLzE,QAAAA,WAAW,EAAE6C,CAAC,CAAC7C,WAAF,GAAgB;AADxB,OAAP;AAGD,KAPO,CAAR;AAQD,GATkB,EAShB,CAACsC,QAAD,CATgB,CAAnB;AAUA,QAAMb,KAAK,GAAG4C,QAAQ,IAAIE,WAA1B;AACA,QAAMrC,OAAO,GAAGoC,UAAU,IAAIE,aAA9B;AACA,SAAO,CAAC;AACNvB,IAAAA,IAAI,EAAEG,OAAO,GAAG;AACdA,MAAAA,OADc;AAEduB,MAAAA,SAAS,EAAER,WAAW,CAACQ,SAFT;AAGdrB,MAAAA,GAAG,EAAEA,GAAG,GAAG;AACTR,QAAAA,MADS;AAETW,QAAAA,IAAI,EAAEH;AAFG,OAAH,GAGJrC;AANU,KAAH,GAOTA,SARE;AASNQ,IAAAA,KATM;AAUNS,IAAAA;AAVM,GAAD,EAWJuC,UAXI,CAAP;AAYD,CAnDD;;AAqDA,MAAMG,cAAc,GAAG;AACrB1C,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM2C,cAAc,GAAG,YAAY;AACjC,MAAI;AACFxC,IAAAA,IADE;AAEFyC,IAAAA;AAFE,MAGA/D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMK,iBAAiB,GAAGD,oBAAoB,EAA9C;AACA,QAAM,CAACH,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAewD,cAAf,CAA1B;AACA,QAAMrC,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAM8E,cAAc,GAAG9G,KAAK,CAACwC,WAAN,CAAkB,YAAY;AACnD,QAAIiC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACFJ,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM8C,WAAW,GAAG,MAAMrF,QAAQ,CAACoF,cAAT,EAA1B;;AAEA,UAAI,CAACrC,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbmC,UAAAA,WADa;AAEb9C,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAE+B,WADD;AAELvD,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAlBD,CAkBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAvCsB,EAuCpB,CAACc,WAAD,EAAc5C,QAAd,CAvCoB,CAAvB;AAwCA;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAJ,EAAU;AACV0C,IAAAA,cAAc;AACd,WAAOxC,WAAP;AACD,GAJD,EAIG,CAACvC,WAAD,EAAcuC,WAAd,EAA2BF,IAA3B,CAJH;AAKA;;AAEApE,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAC0E,KAAL,EAAY;AACZ,QAAIpC,SAAS,GAAG,KAAhB;;AAEA,UAAMuC,QAAQ,GAAGD,WAAW,IAAI;AAC9B;AACA;AACA,UAAI,CAACtC,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbmC,UAAAA;AADa,SAAL,CAAF,CAAR;AAGD;AACF,KARD;;AAUA,UAAME,SAAS,GAAGrF,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6DA,iBAA7D,GAAiFF,QAAnG;AACAuF,IAAAA,SAAS,CAACC,EAAV,CAAa,OAAb,EAAsBF,QAAtB;AACA,WAAO,MAAM;AACXvC,MAAAA,SAAS,GAAG,IAAZ;AACAwC,MAAAA,SAAS,CAACE,GAAV,CAAc,OAAd,EAAuBH,QAAvB;AACD,KAHD;AAID,GApBD,EAoBG,CAACtF,QAAD,EAAWmF,KAAX,EAAkBjF,iBAAlB,CApBH;AAqBA,SAAO,CAAC;AACNoD,IAAAA,IAAI,EAAExD,KAAK,CAACuF,WADN;AAENvD,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJ6C,cAJI,CAAP;AAKD,CArFD;;AAuFA,MAAMM,cAAc,GAAG;AACrBnD,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMoD,UAAU,GAAG,YAAY;AAC7B,MAAI;AACFC,IAAAA,WAAW,GAAG,KADZ;AAEFlD,IAAAA,IAFE;AAGFyC,IAAAA;AAHE,MAIA/D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAJxE;AAKA,QAAMpB,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAAC;AACLyD,IAAAA,IAAI,EAAE+B;AADD,GAAD,IAEDH,cAAc,CAAC;AAClBxC,IAAAA,IAAI,EAAE,IADY;AAElByC,IAAAA;AAFkB,GAAD,CAFnB;AAMA,QAAM9E,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAM,CAACL,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeiE,cAAf,CAA1B;AACA,QAAM9C,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuF,UAAU,GAAGvH,KAAK,CAACwC,WAAN,CAAkB,YAAY;AAC/C,QAAIiC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACFJ,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMuD,OAAO,GAAG,MAAM9F,QAAQ,CAAC6F,UAAT,EAAtB;;AAEA,UAAI,CAAC9C,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACb4C,UAAAA,OADa;AAEbvD,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEwC,OADD;AAELhE,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAlBD,CAkBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAvCkB,EAuChB,CAACc,WAAD,EAAc5C,QAAd,CAvCgB,CAAnB,CAhB6B,CAuDA;;AAE7B;;AAEA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAJ,EAAU;AACVmD,IAAAA,UAAU;AACV,WAAOjD,WAAP;AACD,GAJD,EAIG,CAACvC,WAAD,EAAcuC,WAAd,EAA2BF,IAA3B,CAJH;AAKA;;AAEApE,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAC0E,KAAD,IAAU,CAACE,WAAf,EAA4B;AAC5BQ,IAAAA,UAAU;AACV,WAAOjD,WAAP;AACD,GAJD,EAIG,CAACyC,WAAD,EAAczC,WAAd,EAA2BiD,UAA3B,EAAuCV,KAAvC,CAJH;AAKA,QAAMY,SAAS,GAAGjG,KAAK,CAACgG,OAAN,GAAgB;AAChCE,IAAAA,QAAQ,EAAEtG,KAAK,CAACkG,WAAN,CAAkB9F,KAAK,CAACgG,OAAN,CAAcE,QAAhC,EAA0CJ,WAA1C,CADsB;AAEhCK,IAAAA,YAAY,EAAEvG,KAAK,CAACkG,WAAN,CAAkB9F,KAAK,CAACgG,OAAN,CAAcG,YAAhC,EAA8CL,WAA9C,CAFkB;AAGhCM,IAAAA,oBAAoB,EAAExG,KAAK,CAACkG,WAAN,CAAkB9F,KAAK,CAACgG,OAAN,CAAcI,oBAAhC,EAAsDN,WAAtD;AAHU,GAAhB,GAIdtE,SAJJ;AAKA,SAAO,CAAC;AACNgC,IAAAA,IAAI,EAAExD,KAAK,CAACgG,OAAN,GAAgB,EAAE,GAAGhG,KAAK,CAACgG,OAAX;AACpBC,MAAAA;AADoB,KAAhB,GAEFzE,SAHE;AAINiB,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAJT;AAKNT,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AALP,GAAD,EAMJ+D,UANI,CAAP;AAOD,CAnFD;;AAqFA,MAAMM,cAAc,GAAG;AACrB5D,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM6D,UAAU,GAAG,YAAY;AAC7B,MAAI;AACF3D,IAAAA,aADE;AAEFmD,IAAAA,WAAW,GAAG,OAFZ;AAGFlD,IAAAA,IAHE;AAIF2D,IAAAA,KAJE;AAKFlB,IAAAA;AALE,MAMA/D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EANxE;AAOA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAMM,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAAC;AACLyD,IAAAA,IAAI,EAAE+B;AADD,GAAD,IAEDH,cAAc,CAAC;AAClBxC,IAAAA,IAAI,EAAE,IADY;AAElByC,IAAAA;AAFkB,GAAD,CAFnB;AAMA,QAAM,CAACrF,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAe0E,cAAf,CAA1B;AACA,QAAMvD,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMgG,UAAU,GAAGhI,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACnD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,UAAIwD,iBAAJ;;AAEA,YAAMvD,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DL,QAAAA,aAD8D;AAE9DmD,QAAAA,WAF8D;AAG9DS,QAAAA;AAH8D,OAAhE;AAKA,UAAI,CAACrD,OAAO,CAACP,aAAb,EAA4B,MAAM,IAAIQ,KAAJ,CAAU,qBAAV,CAAN;AAC5BN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMiE,OAAO,GAAG,MAAMhI,aAAa,CAAC;AAClCiI,QAAAA,MAAM,EAAE,CAAC,IAAI,CAACF,iBAAiB,GAAGvB,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACyB,MAArF,MAAiG,IAAjG,IAAyGF,iBAAiB,KAAK,KAAK,CAApI,GAAwIA,iBAAxI,GAA4J,EAAhK,CAAD,EAAsK,GAAG9H,aAAzK,EAAwL,GAAGC,eAA3L,CAD0B;AAElCoE,QAAAA,MAAM,EAAEE,OAF0B;AAGlChD,QAAAA;AAHkC,OAAD,CAAnC;AAKA,UAAI,CAAC+C,SAAL,EAAgBJ,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AAC7BsD,QAAAA,OAD6B;AAE7BjE,QAAAA,OAAO,EAAE;AAFoB,OAAL,CAAF,CAAR;AAIhB,aAAO;AACLe,QAAAA,IAAI,EAAEkD,OADD;AAEL1E,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KA1BD,CA0BE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;AACA,UAAI,CAACN,SAAL,EAAgBJ,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AAC7BpB,QAAAA,KAD6B;AAE7BS,QAAAA,OAAO,EAAE;AAFoB,OAAL,CAAF,CAAR;AAIhB,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA3CkB,EA2ChB,CAACW,aAAD,EAAgBG,WAAhB,EAA6BoC,SAA7B,EAAwCY,WAAxC,EAAqD5F,QAArD,EAA+DqG,KAA/D,CA3CgB,CAAnB,CAvB6B,CAkE8C;;AAE3E;;AAEA/H,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACD,aAAb,EAA4B;AAC5B6D,IAAAA,UAAU,CAAC;AACT7D,MAAAA,aADS;AAETmD,MAAAA,WAFS;AAGTS,MAAAA;AAHS,KAAD,CAAV;AAKA,WAAOzD,WAAP;AACD,GARD,EAQG,CAACH,aAAD,EAAgBpC,WAAhB,EAA6BuC,WAA7B,EAA0CF,IAA1C,EAAgD2D,KAAhD,CARH;AASA;;AAEA;;AAEA/H,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAC0E,KAAL,EAAY;AACZ,QAAI,CAACE,WAAL,EAAkB;AAClB,QAAI,CAAC5C,aAAL,EAAoB;AACpB6D,IAAAA,UAAU,CAAC;AACT7D,MAAAA,aADS;AAETmD,MAAAA,WAFS;AAGTS,MAAAA;AAHS,KAAD,CAAV;AAKD,GATD,EASG,CAAChB,WAAD,CATH;AAUA;;AAEA,SAAO,CAAC;AACN/B,IAAAA,IAAI,EAAExD,KAAK,CAAC0G,OADN;AAEN1E,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJ+D,UAJI,CAAP;AAKD,CApGD;;AAsGA,MAAMI,cAAc,GAAG;AACrBnE,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMoE,UAAU,GAAG,MAAM;AACvB,MAAIrC,iBAAJ;;AAEA,QAAM;AACJxE,IAAAA,KAAK,EAAE0E,WADH;AAEJ7B,IAAAA,QAAQ,EAAEiE,cAFN;AAGJC,IAAAA;AAHI,MAIF9G,UAAU,EAJd;AAKA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeiF,cAAf,CAA1B;AACA,QAAM9D,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMwG,OAAO,GAAGxI,KAAK,CAACwC,WAAN,CAAkB,MAAMkE,SAAN,IAAmB;AACnD,QAAIjC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMgE,eAAe,GAAGvC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACQ,SAA9F;AACA,UAAIA,SAAS,KAAK+B,eAAlB,EAAmC,MAAM,IAAIpI,8BAAJ,EAAN;AACnCgE,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,QAAAA,OAAO,EAAE,IADI;AAEbyC,QAAAA,SAFa;AAGblD,QAAAA,KAAK,EAAER;AAHM,OAAL,CAAF,CAAR;AAKA,YAAMgC,IAAI,GAAG,MAAM0B,SAAS,CAAC8B,OAAV,EAAnB;;AAEA,UAAI,CAAC/D,SAAL,EAAgB;AACd;AACA6D,QAAAA,cAAc,CAAC1D,CAAC,KAAK,EAAE,GAAGA,CAAL;AACnB8B,UAAAA,SADmB;AAEnB1B,UAAAA;AAFmB,SAAL,CAAF,CAAd;AAIAuD,QAAAA,oBAAoB,CAAC7B,SAAS,CAAClB,IAAX,CAApB;AACAnB,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE;AADI,SAAL,CAAF,CAAR;AAGD;;AAED,aAAO;AACLe,QAAAA,IADK;AAELxB,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KA1BD,CA0BE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACb8B,UAAAA,SAAS,EAAE1D,SADE;AAEbQ,UAAAA,KAFa;AAGbS,UAAAA,OAAO,EAAE;AAHI,SAAL,CAAF,CAAR;AAKD;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAhDe,EAgDb,CAACc,WAAD,EAAc4B,WAAW,CAACQ,SAA1B,EAAqC4B,cAArC,EAAqDC,oBAArD,CAhDa,CAAhB,CAVuB,CA0DyD;;AAEhFvI,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpBkC,IAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACb8B,MAAAA,SAAS,EAAER,WAAW,CAACQ,SADV;AAEblD,MAAAA,KAAK,EAAER;AAFM,KAAL,CAAF,CAAR;AAIA,WAAOsB,WAAP;AACD,GAND,EAMG,CAACA,WAAD,EAAc4B,WAAW,CAACQ,SAA1B,CANH;AAOA,SAAO,CAAC;AACN1B,IAAAA,IAAI,EAAE;AACJ0D,MAAAA,SAAS,EAAE,CAAC,EAAE,CAAC1C,iBAAiB,GAAGE,WAAW,CAAClB,IAAjC,MAA2C,IAA3C,IAAmDgB,iBAAiB,KAAK,KAAK,CAA9E,IAAmFA,iBAAiB,CAACG,OAAvG,CADR;AAEJO,MAAAA,SAAS,EAAElF,KAAK,CAACkF,SAFb;AAGJiC,MAAAA,UAAU,EAAEzC,WAAW,CAACyC;AAHpB,KADA;AAMNnF,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KANP;AAONS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC,OAAN,IAAiBiC,WAAW,CAAC0C;AAPhC,GAAD,EAQJJ,OARI,CAAP;AASD,CA5ED;;AA8EA,MAAMK,cAAc,GAAG;AACrB5E,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM6E,UAAU,GAAG,MAAM;AACvB,MAAIC,WAAJ,EAAiBC,YAAjB,EAA+Bf,iBAA/B;;AAEA,QAAM;AACJzG,IAAAA,KAAK,EAAE;AACLkF,MAAAA,SADK;AAEL1B,MAAAA;AAFK;AADH,MAKFvD,UAAU,EALd;AAMA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAe0F,cAAf,CAA1B;AACA,QAAMI,OAAO,GAAGjE,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4C,CAAC+D,WAAW,GAAG/D,IAAI,CAACjE,KAApB,MAA+B,IAA/B,IAAuCgI,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,WAAW,CAACG,EAAjJ;AACA,QAAMC,WAAW,GAAGnE,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4C,CAACgE,YAAY,GAAGhE,IAAI,CAACjE,KAArB,MAAgC,IAAhC,IAAwCiI,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,YAAY,CAACG,WAAxJ;AACA,QAAMC,YAAY,GAAG,CAACnB,iBAAiB,GAAGvB,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACyB,MAArF,MAAiG,IAAjG,IAAyGF,iBAAiB,KAAK,KAAK,CAApI,GAAwIA,iBAAxI,GAA4J,EAAjL;AACA,QAAMoB,WAAW,GAAG,CAAC,GAAGD,YAAJ,EAAkB,GAAG9I,SAArB,EAAgCgJ,IAAhC,CAAqC1E,CAAC,IAAIA,CAAC,CAACsE,EAAF,KAASD,OAAnD,CAApB;AACA,QAAM3E,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuH,aAAa,GAAGvJ,KAAK,CAACwC,WAAN,CAAkB,MAAMyG,OAAN,IAAiB;AACvD,QAAIxE,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;AAGA,QAAI,EAAEiC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,IAA8CA,SAAS,CAAC8C,WAA1D,CAAJ,EAA4E,OAAO;AACjFxE,MAAAA,IAAI,EAAEhC,SAD2E;AAEjFQ,MAAAA,KAAK,EAAE,IAAIjD,gBAAJ;AAF0E,KAAP;;AAK5E,QAAI;AACF8D,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAMlD,KAAK,GAAG,MAAM2F,SAAS,CAAC8C,WAAV,CAAsBP,OAAtB,CAApB;;AAEA,UAAI,CAACxE,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE;AADI,SAAL,CAAF,CAAR;AAGD;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEjE,KADD;AAELyC,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAjBD,CAiBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA1CqB,EA0CnB,CAACc,WAAD,EAAcoC,SAAd,CA1CmB,CAAtB;AA2CA,SAAO,CAAC;AACN1B,IAAAA,IAAI,EAAE;AACJjE,MAAAA,KAAK,EAAEkI,OAAO,GAAG,EAAE,GAAGI,WAAL;AACfH,QAAAA,EAAE,EAAED,OADW;AAEfE,QAAAA;AAFe,OAAH,GAGVnG,SAJA;AAKJmF,MAAAA,MAAM,EAAEiB;AALJ,KADA;AAQN5F,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KARP;AASNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AATT,GAAD,EAUJyC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,IAA8CA,SAAS,CAAC8C,WAAxD,GAAsED,aAAtE,GAAsFvG,SAVlF,CAAP;AAWD,CArED;;AAuEA,MAAMyG,cAAc,GAAG;AACrBzE,EAAAA,IAAI,EAAEhC,SADe;AAErBQ,EAAAA,KAAK,EAAER,SAFc;AAGrBiB,EAAAA,OAAO,EAAE;AAHY,CAAvB;;AAKA,MAAMyF,SAAS,GAAG,YAAY;AAC5B,MAAI;AACFtF,IAAAA;AADE,MAEAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAFxE;AAGA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAM;AACJL,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAesG,cAAf,CAA1B;AACA,QAAMnF,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAM2H,SAAS,GAAG3J,KAAK,CAACwC,WAAN,CAAkB,YAAY;AAC9C,QAAIiC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACFJ,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM2F,MAAM,GAAG,OAAOlD,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACiD,SAAV,EAA7D,CAAf;;AAEA,UAAI,CAAClF,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbI,UAAAA,IAAI,EAAE4E,MADO;AAEb3F,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO2F,MAAP;AACD,KAfD,CAeE,OAAO7E,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbI,UAAAA,IAAI,EAAEhC,SADO;AAEbQ,UAAAA,KAFa;AAGbS,UAAAA,OAAO,EAAE;AAHI,SAAL,CAAF,CAAR;AAKD;AACF;AACF,GAhCiB,EAgCf,CAACK,WAAD,EAAcoC,SAAd,CAhCe,CAAlB;AAiCA;;AAEA1G,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAJ,EAAU;AACVuF,IAAAA,SAAS;AACT,WAAOrF,WAAP;AACD,GAJD,EAIG,CAACvC,WAAD,EAAc2E,SAAd,EAAyBpC,WAAzB,EAAsCF,IAAtC,CAJH;AAKA;;AAEA,SAAO,CAAC5C,KAAD,EAAQmI,SAAR,CAAP;AACD,CAvDD;;AAyDA,MAAME,cAAc,GAAG;AACrB5F,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM6F,cAAc,GAAG,YAAY;AACjC,MAAI;AACFC,IAAAA;AADE,MAEAjH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAFxE;AAGA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAe0G,cAAf,CAA1B;AACA,QAAMvF,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMgI,WAAW,GAAGhK,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACpD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DuF,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAACrF,OAAO,CAACqF,OAAb,EAAsB,MAAM,IAAIpF,KAAJ,CAAU,qBAAV,CAAN;AACtB,UAAI,CAAC+B,SAAL,EAAgB,MAAM,IAAIlG,sBAAJ,EAAN;AAChB6D,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM2F,MAAM,GAAG,MAAMlD,SAAS,CAACiD,SAAV,EAArB;AACA,YAAMM,SAAS,GAAG,MAAML,MAAM,CAACI,WAAP,CAAmBtF,OAAO,CAACqF,OAA3B,CAAxB;;AAEA,UAAI,CAACtF,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbqF,UAAAA,SADa;AAEbhG,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEiF,SADD;AAELzG,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAxBD,CAwBE,OAAO+B,MAAP,EAAe;AACf,UAAIvB,KAAK,GAAGuB,MAAZ;AACA,UAAIA,MAAM,CAACmF,IAAP,KAAgB,IAApB,EAA0B1G,KAAK,GAAG,IAAI/C,wBAAJ,EAAR;;AAE1B,UAAI,CAACgE,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA9CmB,EA8CjB,CAACc,WAAD,EAAcoC,SAAd,EAAyBqD,OAAzB,CA9CiB,CAApB;AA+CA,SAAO,CAAC;AACN/E,IAAAA,IAAI,EAAExD,KAAK,CAACyI,SADN;AAENzG,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJ+F,WAJI,CAAP;AAKD,CA/DD;;AAiEA,MAAMG,cAAc,GAAG;AACrBlG,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMmG,gBAAgB,GAAG,YAAY;AACnC,MAAI;AACFC,IAAAA,MADE;AAEFC,IAAAA,KAFE;AAGFrH,IAAAA;AAHE,MAIAH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAJxE;AAKA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAegH,cAAf,CAA1B;AACA,QAAM7F,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuI,aAAa,GAAGvK,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACtD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9D6F,QAAAA,MAD8D;AAE9DC,QAAAA,KAF8D;AAG9DrH,QAAAA;AAH8D,OAAhE;AAKA,UAAI,CAACyB,OAAO,CAAC2F,MAAb,EAAqB,MAAM,IAAI1F,KAAJ,CAAU,oBAAV,CAAN;AACrB,UAAI,CAACD,OAAO,CAAC4F,KAAb,EAAoB,MAAM,IAAI3F,KAAJ,CAAU,kBAAV,CAAN;AACpB,UAAI,CAACD,OAAO,CAACzB,KAAb,EAAoB,MAAM,IAAI0B,KAAJ,CAAU,mBAAV,CAAN;AACpB,UAAI,CAAC+B,SAAL,EAAgB,MAAM,IAAIlG,sBAAJ,EAAN;AAChB6D,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM2F,MAAM,GAAG,MAAMlD,SAAS,CAACiD,SAAV,EAArB,CAdE,CAc0C;;AAE5C,YAAMM,SAAS,GAAG,MAAML,MAAM,CAACY,cAAP,CAAsB9F,OAAO,CAAC2F,MAA9B,EAAsC3F,OAAO,CAAC4F,KAA9C,EAAqD5F,OAAO,CAACzB,KAA7D,CAAxB;;AAEA,UAAI,CAACwB,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbqF,UAAAA,SADa;AAEbhG,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEiF,SADD;AAELzG,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KA7BD,CA6BE,OAAO+B,MAAP,EAAe;AACf,UAAIvB,KAAK,GAAGuB,MAAZ;AACA,UAAIA,MAAM,CAACmF,IAAP,KAAgB,IAApB,EAA0B1G,KAAK,GAAG,IAAI/C,wBAAJ,EAAR;;AAE1B,UAAI,CAACgE,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAnDqB,EAmDnB,CAACc,WAAD,EAAcoC,SAAd,EAAyB2D,MAAzB,EAAiCC,KAAjC,EAAwCrH,KAAxC,CAnDmB,CAAtB;AAoDA,SAAO,CAAC;AACN+B,IAAAA,IAAI,EAAExD,KAAK,CAACyI,SADN;AAENzG,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJsG,aAJI,CAAP;AAKD,CAtED;;AAwEA,MAAME,WAAW,GAAGC,IAAI,IAAI;AAC1B,MAAI;AACFvG,IAAAA,aADE;AAEFwG,IAAAA,iBAFE;AAGFC,IAAAA;AAHE,MAIAF,IAJJ;AAKA,SAAO,IAAIrJ,QAAJ,CAAa8C,aAAb,EAA4BwG,iBAA5B,EAA+CC,gBAA/C,CAAP;AACD,CAPD;;AASA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAI;AACF3G,IAAAA,aADE;AAEFwG,IAAAA,iBAFE;AAGFC,IAAAA;AAHE,MAIAE,KAJJ;AAKA,SAAO9K,KAAK,CAAC+K,OAAN,CAAc,MAAM;AACzB,WAAON,WAAW,CAAC;AACjBtG,MAAAA,aADiB;AAEjBwG,MAAAA,iBAFiB;AAGjBC,MAAAA;AAHiB,KAAD,CAAlB;AAKD,GANM,EAMJ,CAACzG,aAAD,EAAgBwG,iBAAhB,EAAmCC,gBAAnC,CANI,CAAP;AAOD,CAbD;;AAeA,MAAMI,gBAAgB,GAAG,UAAUC,cAAV,EAA0BC,SAA1B,EAAqClE,QAArC,EAA+C;AACtE,MAAI;AACFmE,IAAAA;AADE,MAEArI,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAFxE;AAGA,QAAMpB,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMK,iBAAiB,GAAGD,oBAAoB,EAA9C;AACA,QAAMyJ,QAAQ,GAAGP,WAAW,CAAC;AAC3BD,IAAAA,gBAAgB,EAAEhJ,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6DA,iBAA7D,GAAiFF,QADxE;AAE3B,OAAGuJ;AAFwB,GAAD,CAA5B;AAIA,QAAMI,WAAW,GAAGrL,KAAK,CAACkC,MAAN,CAAa8E,QAAb,CAApB;AACAqE,EAAAA,WAAW,CAAChJ,OAAZ,GAAsB2E,QAAtB;AACA;;AAEAhH,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,UAAMmJ,OAAO,GAAG,YAAY;AAC1B,WAAK,IAAIC,IAAI,GAAGzI,SAAS,CAACC,MAArB,EAA6ByI,KAAK,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAArC,EAAsDG,IAAI,GAAG,CAAlE,EAAqEA,IAAI,GAAGH,IAA5E,EAAkFG,IAAI,EAAtF,EAA0F;AACxFF,QAAAA,KAAK,CAACE,IAAD,CAAL,GAAc5I,SAAS,CAAC4I,IAAD,CAAvB;AACD;;AAED,aAAOL,WAAW,CAAChJ,OAAZ,CAAoBmJ,KAApB,CAAP;AACD,KAND;;AAQA,UAAMG,SAAS,GAAGP,QAAlB;AACA,QAAID,IAAJ,EAAUQ,SAAS,CAACR,IAAV,CAAeD,SAAf,EAA0BI,OAA1B,EAAV,KAAkDK,SAAS,CAACzE,EAAV,CAAagE,SAAb,EAAwBI,OAAxB;AAClD,WAAO,MAAM;AACXK,MAAAA,SAAS,CAACxE,GAAV,CAAc+D,SAAd,EAAyBI,OAAzB;AACD,KAFD;AAGD,GAdD,EAcG,CAACF,QAAD,EAAWF,SAAX,CAdH;AAeA;AACD,CA9BD;;AAgCA,MAAMU,cAAc,GAAG;AACrB3H,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAM4H,eAAe,GAAG,UAAUZ,cAAV,EAA0Ba,YAA1B,EAAwC;AAC9D,MAAI;AACFC,IAAAA,IADE;AAEFC,IAAAA,SAFE;AAGF5H,IAAAA,IAHE;AAIFyC,IAAAA;AAJE,MAKA/D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EALxE;AAMA,QAAMf,WAAW,GAAGF,cAAc,EAAlC;AACA,QAAMH,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM6J,QAAQ,GAAGP,WAAW,CAAC;AAC3BD,IAAAA,gBAAgB,EAAElJ,QADS;AAE3B,OAAGuJ;AAFwB,GAAD,CAA5B;AAIA,QAAM,CAAC;AACLjG,IAAAA,IAAI,EAAE+B;AADD,GAAD,IAEDH,cAAc,CAAC;AAClBxC,IAAAA,IAAI,EAAE,IADY;AAElByC,IAAAA;AAFkB,GAAD,CAFnB;AAMA,QAAM,CAACrF,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeyI,cAAf,CAA1B;AACA,QAAMtH,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMiK,IAAI,GAAGjM,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AAC7C,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DuH,QAAAA,IAD8D;AAE9DC,QAAAA;AAF8D,OAAhE;AAIA,YAAME,MAAM,GAAG,CAAC,IAAIT,KAAK,CAACU,OAAN,CAAczH,OAAO,CAACqH,IAAtB,IAA8BrH,OAAO,CAACqH,IAAtC,GAA6CrH,OAAO,CAACqH,IAAR,GAAe,CAACrH,OAAO,CAACqH,IAAT,CAAf,GAAgC,EAAjF,CAAD,EAAuF,IAAIrH,OAAO,CAACsH,SAAR,GAAoB,CAACtH,OAAO,CAACsH,SAAT,CAApB,GAA0C,EAA9C,CAAvF,CAAf;AACA3H,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE,IAFI;AAGbmI,QAAAA,QAAQ,EAAEpJ;AAHG,OAAL,CAAF,CAAR;AAKA,YAAMoJ,QAAQ,GAAG,MAAMhB,QAAQ,CAACU,YAAD,CAAR,CAAuB,GAAGI,MAA1B,CAAvB;;AAEA,UAAI,CAACzH,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE,KADI;AAEbmI,UAAAA;AAFa,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLpH,QAAAA,IAAI,EAAEoH,QADD;AAEL5I,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAxBD,CAwBE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA7CY,EA6CV,CAACuI,IAAD,EAAOzH,WAAP,EAAoB8G,QAApB,EAA8BU,YAA9B,EAA4CE,SAA5C,CA7CU,CAAb;AA8CA;;AAEAhM,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAJ,EAAU;AACV6H,IAAAA,IAAI;AACJ,WAAO3H,WAAP;AACD,GAJD,EAIG,CAACvC,WAAD,EAAcuC,WAAd,EAA2BF,IAA3B,CAJH;AAKA;;AAEA;;AAEApE,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAC0E,KAAL,EAAY;AACZ,QAAI,CAACE,WAAL,EAAkB;AAClBkF,IAAAA,IAAI;AACJ,WAAO3H,WAAP;AACD,GALD,EAKG,CAACyC,WAAD,EAAczC,WAAd,EAA2BuC,KAA3B,CALH;AAMA;;AAEA,SAAO,CAAC;AACN7B,IAAAA,IAAI,EAAExD,KAAK,CAAC4K,QADN;AAEN5I,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJgI,IAJI,CAAP;AAKD,CA3FD;;AA6FA,MAAMI,cAAc,GAAG;AACrBpI,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMqI,gBAAgB,GAAG,UAAUrB,cAAV,EAA0Ba,YAA1B,EAAwC;AAC/D,MAAI;AACFC,IAAAA,IADE;AAEFC,IAAAA;AAFE,MAGAlJ,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAHxE;AAIA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAM2J,QAAQ,GAAGP,WAAW,CAACI,cAAD,CAA5B;AACA,QAAM,CAACzJ,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAekJ,cAAf,CAA1B;AACA,QAAM/H,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuK,KAAK,GAAGvM,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AAC9C,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DuH,QAAAA,IAD8D;AAE9DC,QAAAA;AAF8D,OAAhE;AAIA,UAAI,CAACtF,SAAL,EAAgB,MAAM,IAAIlG,sBAAJ,EAAN;AAChB,YAAM0L,MAAM,GAAG,CAAC,IAAIT,KAAK,CAACU,OAAN,CAAczH,OAAO,CAACqH,IAAtB,IAA8BrH,OAAO,CAACqH,IAAtC,GAA6CrH,OAAO,CAACqH,IAAR,GAAe,CAACrH,OAAO,CAACqH,IAAT,CAAf,GAAgC,EAAjF,CAAD,EAAuF,IAAIrH,OAAO,CAACsH,SAAR,GAAoB,CAACtH,OAAO,CAACsH,SAAT,CAApB,GAA0C,EAA9C,CAAvF,CAAf;AACA3H,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE,IAFI;AAGbmI,QAAAA,QAAQ,EAAEpJ;AAHG,OAAL,CAAF,CAAR;AAKA,YAAM4G,MAAM,GAAG,MAAMlD,SAAS,CAACiD,SAAV,EAArB;AACA,YAAMgC,SAAS,GAAGP,QAAQ,CAAC5C,OAAT,CAAiBoB,MAAjB,CAAlB;AACA,YAAMwC,QAAQ,GAAG,MAAMT,SAAS,CAACG,YAAD,CAAT,CAAwB,GAAGI,MAA3B,CAAvB;;AAEA,UAAI,CAACzH,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE,KADI;AAEbmI,UAAAA;AAFa,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLpH,QAAAA,IAAI,EAAEoH,QADD;AAEL5I,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KA3BD,CA2BE,OAAO+B,MAAP,EAAe;AACf,UAAIvB,KAAK,GAAGuB,MAAZ;AACA,UAAIA,MAAM,CAACmF,IAAP,KAAgB,IAApB,EAA0B1G,KAAK,GAAG,IAAI/C,wBAAJ,EAAR;;AAE1B,UAAI,CAACgE,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAjDa,EAiDX,CAACuI,IAAD,EAAOzH,WAAP,EAAoBoC,SAApB,EAA+B0E,QAA/B,EAAyCU,YAAzC,EAAuDE,SAAvD,CAjDW,CAAd;AAkDA,SAAO,CAAC;AACNhH,IAAAA,IAAI,EAAExD,KAAK,CAAC4K,QADN;AAEN5I,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJsI,KAJI,CAAP;AAKD,CApED;;AAsEA,MAAMC,cAAc,GAAG;AACrBvI,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMwI,QAAQ,GAAG,YAAY;AAC3B,MAAI;AACFtH,IAAAA,OADE;AAEFmC,IAAAA,WAAW,GAAG,OAFZ;AAGFlD,IAAAA;AAHE,MAIAtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAJxE;AAKA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeqJ,cAAf,CAA1B;AACA,QAAMlI,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAM0K,QAAQ,GAAG1M,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACjD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,UAAIkI,oBAAJ;;AAEA,YAAMjI,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DW,QAAAA,OAD8D;AAE9DmC,QAAAA;AAF8D,OAAhE;AAIA,UAAI,CAAC5C,OAAO,CAACS,OAAb,EAAsB,MAAM,IAAIR,KAAJ,CAAU,qBAAV,CAAN;AACtB,YAAMyG,QAAQ,GAAG,IAAI9J,MAAM,CAACD,QAAX,CAAoBqD,OAAO,CAACS,OAA5B,EAAqCzE,QAArC,EAA+CgB,QAA/C,CAAjB;AACA,YAAMkL,YAAY,GAAG,CAACD,oBAAoB,GAAGjI,OAAO,CAAC4C,WAAhC,MAAiD,IAAjD,IAAyDqF,oBAAoB,KAAK,KAAK,CAAvF,GAA2FA,oBAA3F,GAAkH,OAAvI;AACAtI,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,QAAAA,KAAK,EAAER,SADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAL,CAAF,CAAR;AAIA,YAAM,CAAC4I,MAAD,EAASC,QAAT,EAAmBC,WAAnB,IAAkC,MAAMC,OAAO,CAACC,GAAR,CAAY,CAAC7B,QAAQ,CAACyB,MAAT,EAAD,EAAoBzB,QAAQ,CAAC0B,QAAT,EAApB,EAAyC1B,QAAQ,CAAC2B,WAAT,EAAzC,CAAZ,CAA9C;AACA,YAAMhF,KAAK,GAAG;AACZ5C,QAAAA,OAAO,EAAET,OAAO,CAACS,OADL;AAEZ2H,QAAAA,QAFY;AAGZD,QAAAA,MAHY;AAIZE,QAAAA,WAAW,EAAE;AACXtF,UAAAA,SAAS,EAAErG,KAAK,CAACkG,WAAN,CAAkByF,WAAlB,EAA+BH,YAA/B,CADA;AAEX3J,UAAAA,KAAK,EAAE8J;AAFI;AAJD,OAAd;;AAUA,UAAI,CAACtI,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbmD,UAAAA,KADa;AAEb9D,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAE+C,KADD;AAELvE,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KApCD,CAoCE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAzDgB,EAyDd,CAAC2B,OAAD,EAAUb,WAAV,EAAuBgD,WAAvB,EAAoC5F,QAApC,CAzDc,CAAjB;AA0DA,QAAMwL,UAAU,GAAGlN,KAAK,CAACwC,WAAN,CAAkB,MAAMuF,KAAN,IAAe;AAClD,QAAI,EAAErB,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,IAA8CA,SAAS,CAACyG,UAA1D,CAAJ,EAA2E,OAAO,KAAP;;AAE3E,QAAI;AACF,YAAMzG,SAAS,CAACyG,UAAV,CAAqBpF,KAArB,CAAN;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAOvE,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF,GATkB,EAShB,CAACkD,SAAD,CATgB,CAAnB;AAUA;;AAEA1G,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACe,OAAb,EAAsB;AACtBuH,IAAAA,QAAQ,CAAC;AACPvH,MAAAA,OADO;AAEPmC,MAAAA;AAFO,KAAD,CAAR;AAIA,WAAOhD,WAAP;AACD,GAPD,EAOG,CAACa,OAAD,EAAUb,WAAV,EAAuBgD,WAAvB,EAAoClD,IAApC,CAPH;AAQA;;AAEA,SAAO,CAAC;AACNY,IAAAA,IAAI,EAAExD,KAAK,CAACuG,KAAN,GAAc,EAAE,GAAGvG,KAAK,CAACuG,KAAX;AAClB5C,MAAAA;AADkB,KAAd,GAEFnC,SAHE;AAINQ,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAJP;AAKNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AALT,GAAD,EAMJiJ,UANI,EAMQR,QANR,CAAP;AAOD,CArGD;;AAuGA,MAAMU,cAAc,GAAG;AACrBnJ,EAAAA,OAAO,EAAE;AADY,CAAvB;;AAGA,MAAMoJ,cAAc,GAAG,YAAY;AACjC,MAAI;AACFC,IAAAA;AADE,MAEAxK,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAFxE;AAGA,QAAM;AACJtB,IAAAA,KAAK,EAAE;AACLkF,MAAAA;AADK;AADH,MAIFjF,UAAU,EAJd;AAKA,QAAM,CAACD,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAeiK,cAAf,CAA1B;AACA,QAAM9I,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAMuL,eAAe,GAAGvN,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AACxD,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9D8I,QAAAA;AAD8D,OAAhE;AAGA,UAAI,CAAC5I,OAAO,CAAC4I,OAAb,EAAsB,MAAM,IAAI3I,KAAJ,CAAU,qBAAV,CAAN;AACtB,UAAI,CAAC+B,SAAL,EAAgB,MAAM,IAAIlG,sBAAJ,EAAN;AAChB6D,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,QAAAA,OAAO,EAAE;AADI,OAAL,CAAF,CAAR;AAGA,YAAM2F,MAAM,GAAG,MAAMlD,SAAS,CAACiD,SAAV,EAArB;AACA,YAAM6D,WAAW,GAAG,MAAM5D,MAAM,CAAC2D,eAAP,CAAuB7I,OAAO,CAAC4I,OAA/B,CAA1B;;AAEA,UAAI,CAAC7I,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE,KADI;AAEbuJ,UAAAA;AAFa,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLxI,QAAAA,IAAI,EAAEwI,WADD;AAELhK,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KAvBD,CAuBE,OAAO+B,MAAP,EAAe;AACf,UAAIvB,KAAK,GAAGuB,MAAZ;AACA,UAAIA,MAAM,CAACmF,IAAP,KAAgB,IAApB,EAA0B1G,KAAK,GAAG,IAAI/C,wBAAJ,EAAR;;AAE1B,UAAI,CAACgE,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GA7CuB,EA6CrB,CAACc,WAAD,EAAcoC,SAAd,EAAyB4G,OAAzB,CA7CqB,CAAxB;AA8CA,SAAO,CAAC;AACNtI,IAAAA,IAAI,EAAExD,KAAK,CAACgM,WADN;AAENhK,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJsJ,eAJI,CAAP;AAKD,CA9DD;;AAgEA,MAAME,YAAY,GAAG;AACnBxJ,EAAAA,OAAO,EAAE;AADU,CAArB;;AAGA,MAAMyJ,qBAAqB,GAAG,YAAY;AACxC,MAAI;AACFC,IAAAA,aADE;AAEFC,IAAAA,IAFE;AAGFxJ,IAAAA,IAHE;AAIFyJ,IAAAA,OAJE;AAKFC,IAAAA,IAAI,EAAEC;AALJ,MAMAjL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EANxE;AAOA,QAAMpB,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACC,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAesK,YAAf,CAA1B;AACA,QAAMnJ,WAAW,GAAGtC,SAAS,EAA7B;AACA,QAAM8L,IAAI,GAAG9N,KAAK,CAACwC,WAAN,CAAkB,MAAMgC,MAAN,IAAgB;AAC7C,QAAIC,SAAS,GAAG,KAAhB;AACAH,IAAAA,WAAW,CAAC,MAAM;AAChBG,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFU,CAAX;;AAIA,QAAI;AACF,YAAMC,OAAO,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD;AAC9DmJ,QAAAA,aAD8D;AAE9DC,QAAAA,IAF8D;AAG9DC,QAAAA,OAH8D;AAI9DC,QAAAA,IAAI,EAAEC;AAJwD,OAAhE;AAMA,UAAI,CAACrJ,OAAO,CAACkJ,IAAT,IAAiB,CAAClJ,OAAO,CAACoJ,IAA9B,EAAoC,MAAM,IAAInJ,KAAJ,CAAU,0BAAV,CAAN;AACpC,UAAIqJ,OAAJ,CARE,CAQW;;AAEb,UAAItJ,OAAO,CAACoJ,IAAZ,EAAkBE,OAAO,GAAGtJ,OAAO,CAACoJ,IAAR,CAAapJ,OAAO,CAACiJ,aAArB,CAAV,CAAlB,KAAqE,IAAIjJ,OAAO,CAACkJ,IAAZ,EAAkBI,OAAO,GAAGtM,QAAQ,CAACuM,kBAAT,CAA4BvJ,OAAO,CAACkJ,IAApC,EAA0ClJ,OAAO,CAACiJ,aAAlD,EAAiEjJ,OAAO,CAACmJ,OAAzE,CAAV,CAAlB,KAAmH,MAAM,IAAIlJ,KAAJ,CAAU,0BAAV,CAAN;AACxLN,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,QAAAA,OAAO,EAAE;AADI,OAAL,CAAF,CAAR;AAGA,YAAMiK,OAAO,GAAG,MAAMF,OAAtB;;AAEA,UAAI,CAACvJ,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbX,UAAAA,OAAO,EAAE,KADI;AAEbiK,UAAAA;AAFa,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLlJ,QAAAA,IAAI,EAAEkJ,OADD;AAEL1K,QAAAA,KAAK,EAAER;AAFF,OAAP;AAID,KA3BD,CA2BE,OAAO+B,MAAP,EAAe;AACf,YAAMvB,KAAK,GAAGuB,MAAd;;AAEA,UAAI,CAACN,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbpB,UAAAA,KADa;AAEbS,UAAAA,OAAO,EAAE;AAFI,SAAL,CAAF,CAAR;AAID;;AAED,aAAO;AACLe,QAAAA,IAAI,EAAEhC,SADD;AAELQ,QAAAA;AAFK,OAAP;AAID;AACF,GAhDY,EAgDV,CAACc,WAAD,EAAcqJ,aAAd,EAA6BC,IAA7B,EAAmClM,QAAnC,EAA6CmM,OAA7C,EAAsDE,KAAtD,CAhDU,CAAb,CAXwC,CA2D0B;;AAElE;;AAEA/N,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAIiC,IAAI,IAAI,CAACwJ,IAAD,IAAS,CAACG,KAAtB,EAA6B;AAC7B;;AAEAD,IAAAA,IAAI,CAAC;AACHH,MAAAA,aADG;AAEHC,MAAAA,IAFG;AAGHC,MAAAA,OAHG;AAIHC,MAAAA,IAAI,EAAEC;AAJH,KAAD,CAAJ;AAMA;;AAEA,WAAOzJ,WAAP;AACD,GAbD,EAaG,CAACA,WAAD,EAAcsJ,IAAd,EAAoBxJ,IAApB,EAA0B2J,KAA1B,CAbH;AAcA;;AAEA,SAAO,CAAC;AACN/I,IAAAA,IAAI,EAAExD,KAAK,CAAC0M,OADN;AAEN1K,IAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAFP;AAGNS,IAAAA,OAAO,EAAEzC,KAAK,CAACyC;AAHT,GAAD,EAIJ6J,IAJI,CAAP;AAKD,CApFD;;AAsFA,MAAMK,OAAO,GAAG,aAAanO,KAAK,CAACoO,aAAN,CAAoB,IAApB,CAA7B;;AACA,MAAMC,QAAQ,GAAG3D,IAAI,IAAI;AACvB,MAAI4D,YAAJ,EAAkBC,kBAAlB,EAAsCC,YAAtC,EAAoDC,kBAApD,EAAwEC,YAAxE,EAAsFC,kBAAtF;;AAEA,MAAI;AACFC,IAAAA,WAAW,GAAG,KADZ;AAEFC,IAAAA,QAFE;AAGFlG,IAAAA,UAAU,EAAEmG,WAAW,GAAG,CAAC,IAAInO,iBAAJ,EAAD,CAHxB;AAIFoO,IAAAA,mBAAmB,GAAG,cAJpB;AAKFrN,IAAAA,QAAQ,EAAEuF,SAAS,GAAGhH,kBAAkB,EALtC;AAMF2B,IAAAA,iBAAiB,EAAEoN;AANjB,MAOAtE,IAPJ;AAQA,QAAM,CAACuE,iBAAD,EAAoB1G,oBAApB,IAA4C5F,eAAe,CAACoM,mBAAD,CAAjE;AACA,QAAM,CAACvN,KAAD,EAAQ6C,QAAR,IAAoBrE,KAAK,CAACmD,QAAN,CAAe;AACvCpB,IAAAA,WAAW,EAAE,CAD0B;AAEvC6G,IAAAA,UAAU,EAAEgG;AAF2B,GAAf,CAA1B;AAIA,QAAMjG,UAAU,GAAG3I,KAAK,CAAC+K,OAAN,CAAc,MAAM;AACrC,QAAImE,WAAJ,EAAiBC,iBAAjB;;AAEA,QAAI,OAAOL,WAAP,KAAuB,UAA3B,EAAuC,OAAOA,WAAP;AACvC,WAAOA,WAAW,CAAC;AACjB7F,MAAAA,OAAO,EAAE,CAACiG,WAAW,GAAG1N,KAAK,CAACwD,IAArB,MAA+B,IAA/B,IAAuCkK,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyE,CAACC,iBAAiB,GAAGD,WAAW,CAACnO,KAAjC,MAA4C,IAA5C,IAAoDoO,iBAAiB,KAAK,KAAK,CAA/E,GAAmF,KAAK,CAAxF,GAA4FA,iBAAiB,CAACjG;AAD/K,KAAD,CAAlB;AAGD,GAPkB,EAOhB,CAAC4F,WAAD,EAAc,CAACR,YAAY,GAAG9M,KAAK,CAACwD,IAAtB,MAAgC,IAAhC,IAAwCsJ,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2E,CAACC,kBAAkB,GAAGD,YAAY,CAACvN,KAAnC,MAA8C,IAA9C,IAAsDwN,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACrF,EAA3M,CAPgB,CAAnB;AAQA,QAAMxH,QAAQ,GAAG1B,KAAK,CAAC+K,OAAN,CAAc,MAAM;AACnC,QAAIqE,YAAJ,EAAkBC,kBAAlB;;AAEA,QAAI,OAAOpI,SAAP,KAAqB,UAAzB,EAAqC,OAAOA,SAAP;AACrC,WAAOA,SAAS,CAAC;AACfgC,MAAAA,OAAO,EAAE,CAACmG,YAAY,GAAG5N,KAAK,CAACwD,IAAtB,MAAgC,IAAhC,IAAwCoK,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2E,CAACC,kBAAkB,GAAGD,YAAY,CAACrO,KAAnC,MAA8C,IAA9C,IAAsDsO,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACnG,EADvL;AAEfxC,MAAAA,SAAS,EAAElF,KAAK,CAACkF;AAFF,KAAD,CAAhB;AAID,GARgB,EAQd,CAACO,SAAD,EAAY,CAACuH,YAAY,GAAGhN,KAAK,CAACwD,IAAtB,MAAgC,IAAhC,IAAwCwJ,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2E,CAACC,kBAAkB,GAAGD,YAAY,CAACzN,KAAnC,MAA8C,IAA9C,IAAsD0N,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACvF,EAAzM,EAA6M1H,KAAK,CAACkF,SAAnN,CARc,CAAjB;AASA,QAAM9E,iBAAiB,GAAG5B,KAAK,CAAC+K,OAAN,CAAc,MAAM;AAC5C,QAAIuE,YAAJ,EAAkBC,kBAAlB;;AAEA,QAAI,CAACP,kBAAL,EAAyB,OAAOhM,SAAP;AACzB,QAAI,OAAOgM,kBAAP,KAA8B,UAAlC,EAA8C,OAAOA,kBAAP;AAC9C,WAAOA,kBAAkB,CAAC;AACxB/F,MAAAA,OAAO,EAAE,CAACqG,YAAY,GAAG9N,KAAK,CAACwD,IAAtB,MAAgC,IAAhC,IAAwCsK,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2E,CAACC,kBAAkB,GAAGD,YAAY,CAACvO,KAAnC,MAA8C,IAA9C,IAAsDwO,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACrG,EAD9K;AAExBxC,MAAAA,SAAS,EAAElF,KAAK,CAACkF;AAFO,KAAD,CAAzB;AAID,GATyB,EASvB,CAACsI,kBAAD,EAAqB,CAACN,YAAY,GAAGlN,KAAK,CAACwD,IAAtB,MAAgC,IAAhC,IAAwC0J,YAAY,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2E,CAACC,kBAAkB,GAAGD,YAAY,CAAC3N,KAAnC,MAA8C,IAA9C,IAAsD4N,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACzF,EAAlN,EAAsN1H,KAAK,CAACkF,SAA5N,CATuB,CAA1B,CAjCuB,CA0CqN;;AAE5O;;AAEA1G,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACyM,WAAL,EAAkB;;AAElB,KAAC,YAAY;AACXvK,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbgE,QAAAA,UAAU,EAAE;AADC,OAAL,CAAF,CAAR;AAGA,YAAM4G,MAAM,GAAGP,iBAAiB,GAAG,CAAC,GAAGtG,UAAJ,EAAgB8G,IAAhB,CAAqB7K,CAAC,IAAIA,CAAC,CAACY,IAAF,KAAWyJ,iBAAX,GAA+B,CAAC,CAAhC,GAAoC,CAA9D,CAAH,GAAsEtG,UAAtG;;AAEA,WAAK,MAAMjC,SAAX,IAAwB8I,MAAxB,EAAgC;AAC9B,YAAI,CAAC9I,SAAS,CAACgJ,KAAX,IAAoB,CAAChJ,SAAS,CAACiJ,YAAnC,EAAiD;AACjD,cAAMA,YAAY,GAAG,MAAMjJ,SAAS,CAACiJ,YAAV,EAA3B;AACA,YAAI,CAACA,YAAL,EAAmB;AACnB,cAAM3K,IAAI,GAAG,MAAM0B,SAAS,CAAC8B,OAAV,EAAnB;AACAnE,QAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACb8B,UAAAA,SADa;AAEb1B,UAAAA;AAFa,SAAL,CAAF,CAAR;AAIA;AACD;;AAEDX,MAAAA,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACbgE,QAAAA,UAAU,EAAE;AADC,OAAL,CAAF,CAAR;AAGD,KArBD;AAsBD,GAzBD,EAyBG,EAzBH;AA0BA;AACA;;AAEA5I,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACX,UAAI,CAACX,KAAK,CAACkF,SAAX,EAAsB;AACtBlF,MAAAA,KAAK,CAACkF,SAAN,CAAgBF,UAAhB;AACD,KAHD;AAID,GALD,EAKG,CAAChF,KAAK,CAACkF,SAAP,CALH,EA3EuB,CAgFA;;AAEvB1G,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACX,KAAK,CAACkF,SAAX,EAAsB;;AAEtB,UAAMkJ,QAAQ,GAAG5K,IAAI,IAAIX,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACtC7C,MAAAA,WAAW,EAAE6C,CAAC,CAAC7C,WAAF,GAAgB,CADS;AAEtCiD,MAAAA,IAAI,EAAE,EAAE,GAAGJ,CAAC,CAACI,IAAP;AACJ,WAAGA;AADC;AAFgC,KAAL,CAAF,CAAjC;;AAOA,UAAM6K,YAAY,GAAG,MAAMxL,QAAQ,CAAC;AAClCtC,MAAAA,WAAW,EAAE;AADqB,KAAD,CAAnC;;AAIA,UAAM+N,OAAO,GAAGtM,KAAK,IAAIa,QAAQ,CAACO,CAAC,KAAK,EAAE,GAAGA,CAAL;AACtCpB,MAAAA;AADsC,KAAL,CAAF,CAAjC;;AAIAhC,IAAAA,KAAK,CAACkF,SAAN,CAAgBQ,EAAhB,CAAmB,QAAnB,EAA6B0I,QAA7B;AACApO,IAAAA,KAAK,CAACkF,SAAN,CAAgBQ,EAAhB,CAAmB,YAAnB,EAAiC2I,YAAjC;AACArO,IAAAA,KAAK,CAACkF,SAAN,CAAgBQ,EAAhB,CAAmB,OAAnB,EAA4B4I,OAA5B;AACA,WAAO,MAAM;AACX,UAAI,CAACtO,KAAK,CAACkF,SAAX,EAAsB;AACtBlF,MAAAA,KAAK,CAACkF,SAAN,CAAgBS,GAAhB,CAAoB,QAApB,EAA8ByI,QAA9B;AACApO,MAAAA,KAAK,CAACkF,SAAN,CAAgBS,GAAhB,CAAoB,YAApB,EAAkC0I,YAAlC;AACArO,MAAAA,KAAK,CAACkF,SAAN,CAAgBS,GAAhB,CAAoB,OAApB,EAA6B2I,OAA7B;AACD,KALD;AAMD,GA3BD,EA2BG,CAACtO,KAAK,CAACkF,SAAP,CA3BH;AA4BA,QAAMzD,KAAK,GAAG;AACZzB,IAAAA,KAAK,EAAE;AACLO,MAAAA,WAAW,EAAEP,KAAK,CAACO,WADd;AAEL6G,MAAAA,UAAU,EAAEpH,KAAK,CAACoH,UAFb;AAGLD,MAAAA,UAHK;AAILjC,MAAAA,SAAS,EAAElF,KAAK,CAACkF,SAJZ;AAKL1B,MAAAA,IAAI,EAAExD,KAAK,CAACwD,IALP;AAMLtD,MAAAA,QANK;AAOLE,MAAAA;AAPK,KADK;AAUZyC,IAAAA,QAVY;AAWZkE,IAAAA;AAXY,GAAd;AAaA,SAAO,aAAavI,KAAK,CAAC+P,aAAN,CAAoB5B,OAAO,CAACE,QAA5B,EAAsC;AACxDpL,IAAAA;AADwD,GAAtC,EAEjB4L,QAFiB,CAApB;AAGD,CA9HD;;AA+HA,MAAMpN,UAAU,GAAG,MAAM;AACvB,QAAMK,OAAO,GAAG9B,KAAK,CAACyB,UAAN,CAAiB0M,OAAjB,CAAhB;AACA,MAAI,CAACrM,OAAL,EAAc,MAAM6C,KAAK,CAAC,8BAAD,CAAX;AACd,SAAO7C,OAAP;AACD,CAJD;;AAMA,SAASqM,OAAT,EAAkBE,QAAlB,EAA4BA,QAAQ,IAAI2B,aAAxC,EAAuDjK,UAAvD,EAAmE+B,UAAnE,EAA+ElB,cAA/E,EAA+FyB,UAA/F,EAA2G5G,UAA3G,EAAuHoJ,WAAvH,EAAoIG,gBAApI,EAAsJa,eAAtJ,EAAuKS,gBAAvK,EAAyLpI,YAAzL,EAAuMgB,YAAvM,EAAqNK,iBAArN,EAAwOI,cAAxO,EAAwP0B,UAAxP,EAAoQyB,UAApQ,EAAgRvH,WAAhR,EAA6RuI,cAA7R,EAA6SM,gBAA7S,EAA+TV,SAA/T,EAA0U+C,QAA1U,EAAoVY,cAApV,EAAoWK,qBAApW,EAA2X/L,oBAA3X","sourcesContent":["import * as React from 'react';\nimport { getDefaultProvider } from '@ethersproject/providers';\nimport { balanceAction, defaultChains, defaultL2Chains, ConnectorAlreadyConnectedError, allChains, SwitchChainError, ConnectorNotFoundError, UserRejectedRequestError, erc20ABI, InjectedConnector } from 'wagmi-core';\nexport { AddChainError, ChainNotConfiguredError, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, InjectedConnector, SwitchChainError, UserRejectedRequestError, allChains, chain, defaultChains, defaultL2Chains, developmentChains, erc1155ABI, erc20ABI, erc721ABI, normalizeChainId } from 'wagmi-core';\nimport { utils, Contract, ethers } from 'ethers';\n\nconst useProvider = () => {\n  const {\n    state\n  } = useContext();\n  return state.provider;\n};\n\nconst useWebSocketProvider = () => {\n  const {\n    state\n  } = useContext();\n  return state.webSocketProvider;\n};\n\nconst useCacheBuster = () => {\n  const context = useContext();\n  return context.state.cacheBuster;\n};\n\nconst useCancel = () => {\n  const cancelCallback = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      var _cancelCallback$curre;\n\n      return (_cancelCallback$curre = cancelCallback.current) === null || _cancelCallback$curre === void 0 ? void 0 : _cancelCallback$curre.call(cancelCallback);\n    };\n  }, []);\n  const cancel = React.useCallback(callback => {\n    var _cancelCallback$curre2;\n\n    (_cancelCallback$curre2 = cancelCallback.current) === null || _cancelCallback$curre2 === void 0 ? void 0 : _cancelCallback$curre2.call(cancelCallback);\n    if (callback) cancelCallback.current = callback;\n  }, []);\n  return cancel;\n};\n\nconst useLocalStorage = function (key) {\n  let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const [value, setValue] = React.useState(() => {\n    if (typeof localStorage === 'undefined') return defaultState;\n    const value = localStorage.getItem(key);\n\n    try {\n      return value ? JSON.parse(value) : defaultState;\n    } catch (error) {\n      console.warn(error);\n      return defaultState;\n    }\n  });\n  const setLocalStorage = React.useCallback(newValue => {\n    if (newValue === value) return;\n    setValue(newValue);\n    if (newValue === null) localStorage.removeItem(key);else localStorage.setItem(key, JSON.stringify(newValue));\n\n    if (newValue === null) {\n      localStorage.removeItem(key);\n    } else {\n      try {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [value, setValue, key]);\n  return [value, setLocalStorage];\n};\n\nconst initialState$g = {\n  loading: false\n};\nconst useEnsAvatar = function () {\n  let {\n    addressOrName,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$g);\n  const cancelQuery = useCancel();\n  const getEnsAvatar = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        addressOrName\n      };\n      if (!config_.addressOrName) throw new Error('addressOrName is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const avatar = await provider.getAvatar(config_.addressOrName);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          avatar,\n          loading: false\n        }));\n      }\n\n      return avatar;\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return error;\n    }\n  }, [addressOrName, cancelQuery, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !addressOrName) return;\n    getEnsAvatar({\n      addressOrName\n    });\n    return cancelQuery;\n  }, [addressOrName, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.avatar,\n    loading: state.loading,\n    error: state.error\n  }, getEnsAvatar];\n};\n\nconst initialState$f = {\n  loading: false\n};\nconst useEnsLookup = function () {\n  let {\n    address,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$f);\n  const cancelQuery = useCancel();\n  const lookupAddress = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        address\n      };\n      if (!config_.address) throw new Error('address is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const ens = await provider.lookupAddress(config_.address);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          ens,\n          loading: false\n        }));\n      }\n\n      return {\n        data: ens,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [address, cancelQuery, provider]); // Resolve name when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !address) return;\n    lookupAddress({\n      address\n    });\n    return cancelQuery;\n  }, [address, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.ens,\n    loading: state.loading,\n    error: state.error\n  }, lookupAddress];\n};\n\nconst initialState$e = {\n  loading: false\n};\nconst useEnsResolveName = function () {\n  let {\n    name,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$e);\n  const cancelQuery = useCancel();\n  const resolveName = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        name\n      };\n      if (!config_.name) throw new Error('name is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const address = await provider.resolveName(config_.name);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          address,\n          loading: false\n        }));\n      }\n\n      return {\n        data: address,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [name, cancelQuery, provider]); // Resolve name when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !name) return;\n    resolveName({\n      name\n    });\n    return cancelQuery;\n  }, [name, cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.address,\n    loading: state.loading,\n    error: state.error\n  }, resolveName];\n};\n\nconst initialState$d = {\n  loading: false\n};\nconst useEnsResolver = function () {\n  let {\n    name,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$d);\n  const cancelQuery = useCancel();\n  const getEnsResolver = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        name\n      };\n      if (!config_.name) throw new Error('name is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const resolver = await provider.getResolver(config_.name);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          resolver\n        }));\n      }\n\n      return {\n        data: resolver,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, name, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !name) return;\n    getEnsResolver({\n      name\n    });\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, name, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.resolver,\n    loading: state.loading,\n    error: state.error\n  }, getEnsResolver];\n};\n\nconst useAccount = function () {\n  var _globalState$data;\n\n  let {\n    fetchEns\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: globalState,\n    setState\n  } = useContext();\n  const address = (_globalState$data = globalState.data) === null || _globalState$data === void 0 ? void 0 : _globalState$data.account;\n  const [{\n    data: ens,\n    error: ensError,\n    loading: ensLoading\n  }] = useEnsLookup({\n    address,\n    skip: !fetchEns\n  });\n  const [{\n    data: avatar,\n    error: avatarError,\n    loading: avatarLoading\n  }] = useEnsAvatar({\n    addressOrName: ens,\n    skip: !fetchEns || !ens\n  });\n  const disconnect = React.useCallback(() => {\n    setState(x => {\n      var _x$connector;\n\n      (_x$connector = x.connector) === null || _x$connector === void 0 ? void 0 : _x$connector.disconnect();\n      return {\n        cacheBuster: x.cacheBuster + 1\n      };\n    });\n  }, [setState]);\n  const error = ensError || avatarError;\n  const loading = ensLoading || avatarLoading;\n  return [{\n    data: address ? {\n      address,\n      connector: globalState.connector,\n      ens: ens ? {\n        avatar,\n        name: ens\n      } : undefined\n    } : undefined,\n    error,\n    loading\n  }, disconnect];\n};\n\nconst initialState$c = {\n  loading: false\n};\nconst useBlockNumber = function () {\n  let {\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const webSocketProvider = useWebSocketProvider();\n  const [state, setState] = React.useState(initialState$c);\n  const cancelQuery = useCancel();\n  const getBlockNumber = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const blockNumber = await provider.getBlockNumber();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          blockNumber,\n          loading: false\n        }));\n      }\n\n      return {\n        data: blockNumber,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, provider]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getBlockNumber();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    let didCancel = false;\n\n    const listener = blockNumber => {\n      // Just to be safe in case the provider implementation\n      // calls the event callback after .off() has been called\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          blockNumber\n        }));\n      }\n    };\n\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      didCancel = true;\n      provider_.off('block', listener);\n    };\n  }, [provider, watch, webSocketProvider]);\n  return [{\n    data: state.blockNumber,\n    error: state.error,\n    loading: state.loading\n  }, getBlockNumber];\n};\n\nconst initialState$b = {\n  loading: false\n};\nconst useFeeData = function () {\n  let {\n    formatUnits = 'wei',\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider();\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const cacheBuster = useCacheBuster();\n  const [state, setState] = React.useState(initialState$b);\n  const cancelQuery = useCancel();\n  const getFeeData = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const feeData = await provider.getFeeData();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          feeData,\n          loading: false\n        }));\n      }\n\n      return {\n        data: feeData,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, provider]); // Fetch feeData on mount or when chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getFeeData();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch || !blockNumber) return;\n    getFeeData();\n    return cancelQuery;\n  }, [blockNumber, cancelQuery, getFeeData, watch]);\n  const formatted = state.feeData ? {\n    gasPrice: utils.formatUnits(state.feeData.gasPrice, formatUnits),\n    maxFeePerGas: utils.formatUnits(state.feeData.maxFeePerGas, formatUnits),\n    maxPriorityFeePerGas: utils.formatUnits(state.feeData.maxPriorityFeePerGas, formatUnits)\n  } : undefined;\n  return [{\n    data: state.feeData ? { ...state.feeData,\n      formatted\n    } : undefined,\n    loading: state.loading,\n    error: state.error\n  }, getFeeData];\n};\n\nconst initialState$a = {\n  loading: false\n};\nconst useBalance = function () {\n  let {\n    addressOrName,\n    formatUnits = 'ether',\n    skip,\n    token,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const [state, setState] = React.useState(initialState$a);\n  const cancelQuery = useCancel();\n  const getBalance = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      var _connector$chains;\n\n      const config_ = config !== null && config !== void 0 ? config : {\n        addressOrName,\n        formatUnits,\n        token\n      };\n      if (!config_.addressOrName) throw new Error('address is required');\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const balance = await balanceAction({\n        chains: [...((_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : []), ...defaultChains, ...defaultL2Chains],\n        config: config_,\n        provider\n      });\n      if (!didCancel) setState(x => ({ ...x,\n        balance,\n        loading: false\n      }));\n      return {\n        data: balance,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n      if (!didCancel) setState(x => ({ ...x,\n        error,\n        loading: false\n      }));\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [addressOrName, cancelQuery, connector, formatUnits, provider, token]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !addressOrName) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n    return cancelQuery;\n  }, [addressOrName, cacheBuster, cancelQuery, skip, token]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n  }, [blockNumber]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.balance,\n    error: state.error,\n    loading: state.loading\n  }, getBalance];\n};\n\nconst initialState$9 = {\n  loading: false\n};\nconst useConnect = () => {\n  var _globalState$data;\n\n  const {\n    state: globalState,\n    setState: setGlobalState,\n    setLastUsedConnector\n  } = useContext();\n  const [state, setState] = React.useState(initialState$9);\n  const cancelQuery = useCancel();\n  const connect = React.useCallback(async connector => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const activeConnector = globalState === null || globalState === void 0 ? void 0 : globalState.connector;\n      if (connector === activeConnector) throw new ConnectorAlreadyConnectedError();\n      setState(x => ({ ...x,\n        loading: true,\n        connector,\n        error: undefined\n      }));\n      const data = await connector.connect();\n\n      if (!didCancel) {\n        // Update connector globally only after successful connection\n        setGlobalState(x => ({ ...x,\n          connector,\n          data\n        }));\n        setLastUsedConnector(connector.name);\n        setState(x => ({ ...x,\n          loading: false\n        }));\n      }\n\n      return {\n        data,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          connector: undefined,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, globalState.connector, setGlobalState, setLastUsedConnector]); // Keep connector in sync with global connector\n\n  React.useEffect(() => {\n    setState(x => ({ ...x,\n      connector: globalState.connector,\n      error: undefined\n    }));\n    return cancelQuery;\n  }, [cancelQuery, globalState.connector]);\n  return [{\n    data: {\n      connected: !!((_globalState$data = globalState.data) !== null && _globalState$data !== void 0 && _globalState$data.account),\n      connector: state.connector,\n      connectors: globalState.connectors\n    },\n    error: state.error,\n    loading: state.loading || globalState.connecting\n  }, connect];\n};\n\nconst initialState$8 = {\n  loading: false\n};\nconst useNetwork = () => {\n  var _data$chain, _data$chain2, _connector$chains;\n\n  const {\n    state: {\n      connector,\n      data\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$8);\n  const chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id;\n  const unsupported = data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.unsupported;\n  const activeChains = (_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : [];\n  const activeChain = [...activeChains, ...allChains].find(x => x.id === chainId);\n  const cancelQuery = useCancel();\n  const switchNetwork = React.useCallback(async chainId => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n    if (!(connector !== null && connector !== void 0 && connector.switchChain)) return {\n      data: undefined,\n      error: new SwitchChainError()\n    };\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const chain = await connector.switchChain(chainId);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false\n        }));\n      }\n\n      return {\n        data: chain,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector]);\n  return [{\n    data: {\n      chain: chainId ? { ...activeChain,\n        id: chainId,\n        unsupported\n      } : undefined,\n      chains: activeChains\n    },\n    error: state.error,\n    loading: state.loading\n  }, connector !== null && connector !== void 0 && connector.switchChain ? switchNetwork : undefined];\n};\n\nconst initialState$7 = {\n  data: undefined,\n  error: undefined,\n  loading: false\n};\nconst useSigner = function () {\n  let {\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheBuster = useCacheBuster();\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$7);\n  const cancelQuery = useCancel();\n  const getSigner = React.useCallback(async () => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await (connector === null || connector === void 0 ? void 0 : connector.getSigner());\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          data: signer,\n          loading: false\n        }));\n      }\n\n      return signer;\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          data: undefined,\n          error,\n          loading: false\n        }));\n      }\n    }\n  }, [cancelQuery, connector]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    getSigner();\n    return cancelQuery;\n  }, [cacheBuster, connector, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [state, getSigner];\n};\n\nconst initialState$6 = {\n  loading: false\n};\nconst useSignMessage = function () {\n  let {\n    message\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$6);\n  const cancelQuery = useCancel();\n  const signMessage = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        message\n      };\n      if (!config_.message) throw new Error('message is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await connector.getSigner();\n      const signature = await signer.signMessage(config_.message);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          signature,\n          loading: false\n        }));\n      }\n\n      return {\n        data: signature,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, message]);\n  return [{\n    data: state.signature,\n    error: state.error,\n    loading: state.loading\n  }, signMessage];\n};\n\nconst initialState$5 = {\n  loading: false\n};\nconst useSignTypedData = function () {\n  let {\n    domain,\n    types,\n    value\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$5);\n  const cancelQuery = useCancel();\n  const signTypedData = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        domain,\n        types,\n        value\n      };\n      if (!config_.domain) throw new Error('domain is required');\n      if (!config_.types) throw new Error('type is required');\n      if (!config_.value) throw new Error('value is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const signer = await connector.getSigner(); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n      const signature = await signer._signTypedData(config_.domain, config_.types, config_.value);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          signature,\n          loading: false\n        }));\n      }\n\n      return {\n        data: signature,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, domain, types, value]);\n  return [{\n    data: state.signature,\n    error: state.error,\n    loading: state.loading\n  }, signTypedData];\n};\n\nconst getContract = _ref => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new Contract(addressOrName, contractInterface, signerOrProvider);\n};\n\nconst useContract = _ref2 => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref2;\n  return React.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nconst useContractEvent = function (contractConfig, eventName, listener) {\n  let {\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const provider = useProvider();\n  const webSocketProvider = useWebSocketProvider();\n  const contract = useContract({\n    signerOrProvider: webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider,\n    ...contractConfig\n  });\n  const listenerRef = React.useRef(listener);\n  listenerRef.current = listener;\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    const handler = function () {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    const contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n    };\n  }, [contract, eventName]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n};\n\nconst initialState$4 = {\n  loading: false\n};\nconst useContractRead = function (contractConfig, functionName) {\n  let {\n    args,\n    overrides,\n    skip,\n    watch\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const cacheBuster = useCacheBuster();\n  const provider = useProvider();\n  const contract = useContract({\n    signerOrProvider: provider,\n    ...contractConfig\n  });\n  const [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  const [state, setState] = React.useState(initialState$4);\n  const cancelQuery = useCancel();\n  const read = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        args,\n        overrides\n      };\n      const params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true,\n        response: undefined\n      }));\n      const response = await contract[functionName](...params);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          response\n        }));\n      }\n\n      return {\n        data: response,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [args, cancelQuery, contract, functionName, overrides]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip) return;\n    read();\n    return cancelQuery;\n  }, [cacheBuster, cancelQuery, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    read();\n    return cancelQuery;\n  }, [blockNumber, cancelQuery, watch]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, read];\n};\n\nconst initialState$3 = {\n  loading: false\n};\nconst useContractWrite = function (contractConfig, functionName) {\n  let {\n    args,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const contract = useContract(contractConfig);\n  const [state, setState] = React.useState(initialState$3);\n  const cancelQuery = useCancel();\n  const write = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        args,\n        overrides\n      };\n      if (!connector) throw new ConnectorNotFoundError();\n      const params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true,\n        response: undefined\n      }));\n      const signer = await connector.getSigner();\n      const contract_ = contract.connect(signer);\n      const response = await contract_[functionName](...params);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          response\n        }));\n      }\n\n      return {\n        data: response,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [args, cancelQuery, connector, contract, functionName, overrides]);\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, write];\n};\n\nconst initialState$2 = {\n  loading: false\n};\nconst useToken = function () {\n  let {\n    address,\n    formatUnits = 'ether',\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState$2);\n  const cancelQuery = useCancel();\n  const getToken = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      var _config_$formatUnits;\n\n      const config_ = config !== null && config !== void 0 ? config : {\n        address,\n        formatUnits\n      };\n      if (!config_.address) throw new Error('address is required');\n      const contract = new ethers.Contract(config_.address, erc20ABI, provider);\n      const formatUnits_ = (_config_$formatUnits = config_.formatUnits) !== null && _config_$formatUnits !== void 0 ? _config_$formatUnits : 'ether';\n      setState(x => ({ ...x,\n        error: undefined,\n        loading: true\n      }));\n      const [symbol, decimals, totalSupply] = await Promise.all([contract.symbol(), contract.decimals(), contract.totalSupply()]);\n      const token = {\n        address: config_.address,\n        decimals,\n        symbol,\n        totalSupply: {\n          formatted: utils.formatUnits(totalSupply, formatUnits_),\n          value: totalSupply\n        }\n      };\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          token,\n          loading: false\n        }));\n      }\n\n      return {\n        data: token,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [address, cancelQuery, formatUnits, provider]);\n  const watchToken = React.useCallback(async token => {\n    if (!(connector !== null && connector !== void 0 && connector.watchAsset)) return false;\n\n    try {\n      await connector.watchAsset(token);\n      return true;\n    } catch (error) {\n      return error;\n    }\n  }, [connector]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !address) return;\n    getToken({\n      address,\n      formatUnits\n    });\n    return cancelQuery;\n  }, [address, cancelQuery, formatUnits, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.token ? { ...state.token,\n      address\n    } : undefined,\n    error: state.error,\n    loading: state.loading\n  }, watchToken, getToken];\n};\n\nconst initialState$1 = {\n  loading: false\n};\nconst useTransaction = function () {\n  let {\n    request\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    state: {\n      connector\n    }\n  } = useContext();\n  const [state, setState] = React.useState(initialState$1);\n  const cancelQuery = useCancel();\n  const sendTransaction = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        request\n      };\n      if (!config_.request) throw new Error('request is required');\n      if (!connector) throw new ConnectorNotFoundError();\n      setState(x => ({ ...x,\n        loading: true\n      }));\n      const signer = await connector.getSigner();\n      const transaction = await signer.sendTransaction(config_.request);\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          transaction\n        }));\n      }\n\n      return {\n        data: transaction,\n        error: undefined\n      };\n    } catch (error_) {\n      let error = error_;\n      if (error_.code === 4001) error = new UserRejectedRequestError();\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, connector, request]);\n  return [{\n    data: state.transaction,\n    error: state.error,\n    loading: state.loading\n  }, sendTransaction];\n};\n\nconst initialState = {\n  loading: false\n};\nconst useWaitForTransaction = function () {\n  let {\n    confirmations,\n    hash,\n    skip,\n    timeout,\n    wait: wait_\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider();\n  const [state, setState] = React.useState(initialState);\n  const cancelQuery = useCancel();\n  const wait = React.useCallback(async config => {\n    let didCancel = false;\n    cancelQuery(() => {\n      didCancel = true;\n    });\n\n    try {\n      const config_ = config !== null && config !== void 0 ? config : {\n        confirmations,\n        hash,\n        timeout,\n        wait: wait_\n      };\n      if (!config_.hash && !config_.wait) throw new Error('hash or wait is required');\n      let promise; // eslint-disable-next-line testing-library/await-async-utils\n\n      if (config_.wait) promise = config_.wait(config_.confirmations);else if (config_.hash) promise = provider.waitForTransaction(config_.hash, config_.confirmations, config_.timeout);else throw new Error('hash or wait is required');\n      setState(x => ({ ...x,\n        loading: true\n      }));\n      const receipt = await promise;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          loading: false,\n          receipt\n        }));\n      }\n\n      return {\n        data: receipt,\n        error: undefined\n      };\n    } catch (error_) {\n      const error = error_;\n\n      if (!didCancel) {\n        setState(x => ({ ...x,\n          error,\n          loading: false\n        }));\n      }\n\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }, [cancelQuery, confirmations, hash, provider, timeout, wait_]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (skip || !hash && !wait_) return;\n    /* eslint-disable testing-library/await-async-utils */\n\n    wait({\n      confirmations,\n      hash,\n      timeout,\n      wait: wait_\n    });\n    /* eslint-enable testing-library/await-async-utils */\n\n    return cancelQuery;\n  }, [cancelQuery, hash, skip, wait_]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.receipt,\n    error: state.error,\n    loading: state.loading\n  }, wait];\n};\n\nconst Context = /*#__PURE__*/React.createContext(null);\nconst Provider = _ref => {\n  var _state$data2, _state$data2$chain, _state$data4, _state$data4$chain, _state$data6, _state$data6$chain;\n\n  let {\n    autoConnect = false,\n    children,\n    connectors: connectors_ = [new InjectedConnector()],\n    connectorStorageKey = 'wagmi.wallet',\n    provider: provider_ = getDefaultProvider(),\n    webSocketProvider: webSocketProvider_\n  } = _ref;\n  const [lastUsedConnector, setLastUsedConnector] = useLocalStorage(connectorStorageKey);\n  const [state, setState] = React.useState({\n    cacheBuster: 1,\n    connecting: autoConnect\n  });\n  const connectors = React.useMemo(() => {\n    var _state$data, _state$data$chain;\n\n    if (typeof connectors_ !== 'function') return connectors_;\n    return connectors_({\n      chainId: (_state$data = state.data) === null || _state$data === void 0 ? void 0 : (_state$data$chain = _state$data.chain) === null || _state$data$chain === void 0 ? void 0 : _state$data$chain.id\n    });\n  }, [connectors_, (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : (_state$data2$chain = _state$data2.chain) === null || _state$data2$chain === void 0 ? void 0 : _state$data2$chain.id]);\n  const provider = React.useMemo(() => {\n    var _state$data3, _state$data3$chain;\n\n    if (typeof provider_ !== 'function') return provider_;\n    return provider_({\n      chainId: (_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : (_state$data3$chain = _state$data3.chain) === null || _state$data3$chain === void 0 ? void 0 : _state$data3$chain.id,\n      connector: state.connector\n    });\n  }, [provider_, (_state$data4 = state.data) === null || _state$data4 === void 0 ? void 0 : (_state$data4$chain = _state$data4.chain) === null || _state$data4$chain === void 0 ? void 0 : _state$data4$chain.id, state.connector]);\n  const webSocketProvider = React.useMemo(() => {\n    var _state$data5, _state$data5$chain;\n\n    if (!webSocketProvider_) return undefined;\n    if (typeof webSocketProvider_ !== 'function') return webSocketProvider_;\n    return webSocketProvider_({\n      chainId: (_state$data5 = state.data) === null || _state$data5 === void 0 ? void 0 : (_state$data5$chain = _state$data5.chain) === null || _state$data5$chain === void 0 ? void 0 : _state$data5$chain.id,\n      connector: state.connector\n    });\n  }, [webSocketProvider_, (_state$data6 = state.data) === null || _state$data6 === void 0 ? void 0 : (_state$data6$chain = _state$data6.chain) === null || _state$data6$chain === void 0 ? void 0 : _state$data6$chain.id, state.connector]); // Attempt to connect on mount\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    if (!autoConnect) return;\n\n    (async () => {\n      setState(x => ({ ...x,\n        connecting: true\n      }));\n      const sorted = lastUsedConnector ? [...connectors].sort(x => x.name === lastUsedConnector ? -1 : 1) : connectors;\n\n      for (const connector of sorted) {\n        if (!connector.ready || !connector.isAuthorized) continue;\n        const isAuthorized = await connector.isAuthorized();\n        if (!isAuthorized) continue;\n        const data = await connector.connect();\n        setState(x => ({ ...x,\n          connector,\n          data\n        }));\n        break;\n      }\n\n      setState(x => ({ ...x,\n        connecting: false\n      }));\n    })();\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  // Make sure connectors close\n\n  React.useEffect(() => {\n    return () => {\n      if (!state.connector) return;\n      state.connector.disconnect();\n    };\n  }, [state.connector]); // Watch connector for events\n\n  React.useEffect(() => {\n    if (!state.connector) return;\n\n    const onChange = data => setState(x => ({ ...x,\n      cacheBuster: x.cacheBuster + 1,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n\n    const onDisconnect = () => setState({\n      cacheBuster: 1\n    });\n\n    const onError = error => setState(x => ({ ...x,\n      error\n    }));\n\n    state.connector.on('change', onChange);\n    state.connector.on('disconnect', onDisconnect);\n    state.connector.on('error', onError);\n    return () => {\n      if (!state.connector) return;\n      state.connector.off('change', onChange);\n      state.connector.off('disconnect', onDisconnect);\n      state.connector.off('error', onError);\n    };\n  }, [state.connector]);\n  const value = {\n    state: {\n      cacheBuster: state.cacheBuster,\n      connecting: state.connecting,\n      connectors,\n      connector: state.connector,\n      data: state.data,\n      provider,\n      webSocketProvider\n    },\n    setState,\n    setLastUsedConnector\n  };\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value\n  }, children);\n};\nconst useContext = () => {\n  const context = React.useContext(Context);\n  if (!context) throw Error('Must be used within Provider');\n  return context;\n};\n\nexport { Context, Provider, Provider as WagmiProvider, useAccount, useBalance, useBlockNumber, useConnect, useContext, useContract, useContractEvent, useContractRead, useContractWrite, useEnsAvatar, useEnsLookup, useEnsResolveName, useEnsResolver, useFeeData, useNetwork, useProvider, useSignMessage, useSignTypedData, useSigner, useToken, useTransaction, useWaitForTransaction, useWebSocketProvider };\n"]},"metadata":{},"sourceType":"module"}