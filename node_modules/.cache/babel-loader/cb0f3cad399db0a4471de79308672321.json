{"ast":null,"code":"import EventEmitter from 'eventemitter3';\n/**\n * Data from Chainlist\n * @see https://chainlist.org\n */\n\nconst chain = {\n  mainnet: {\n    id: 1,\n    name: 'Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://etherscan.io'\n    }]\n  },\n  ropsten: {\n    id: 3,\n    name: 'Ropsten',\n    nativeCurrency: {\n      name: 'Ropsten Ether',\n      symbol: 'ropETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://ropsten.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://ropsten.etherscan.io'\n    }],\n    testnet: true\n  },\n  rinkeby: {\n    id: 4,\n    name: 'Rinkeby',\n    nativeCurrency: {\n      name: 'Rinkeby Ether',\n      symbol: 'rETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://rinkeby.etherscan.io'\n    }],\n    testnet: true\n  },\n  goerli: {\n    id: 5,\n    name: 'Goerli',\n    nativeCurrency: {\n      name: 'Goerli Ether',\n      symbol: 'gETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://goerli.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io'\n    }],\n    testnet: true\n  },\n  kovan: {\n    id: 42,\n    name: 'Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'kETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://kovan.etherscan.io'\n    }],\n    testnet: true\n  },\n  optimism: {\n    id: 10,\n    name: 'Optimism',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://optimistic.etherscan.io'\n    }]\n  },\n  optimismKovan: {\n    id: 69,\n    name: 'Optimism Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'KOR',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://kovan-optimistic.etherscan.io'\n    }],\n    testnet: true\n  },\n  polygonMainnet: {\n    id: 137,\n    name: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://polygon-rpc.com', 'https://rpc-mainnet.matic.network', 'https://matic-mainnet.chainstacklabs.com', 'https://rpc-mainnet.maticvigil.com', 'https://rpc-mainnet.matic.quiknode.pro', 'https://matic-mainnet-full-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://polygonscan.com'\n    }]\n  },\n  polygonTestnetMumbai: {\n    id: 80_001,\n    name: 'Mumbai',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://matic-mumbai.chainstacklabs.com', 'https://rpc-mumbai.maticvigil.com', 'https://matic-testnet-archive-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://mumbai.polygonscan.com'\n    }],\n    testnet: true\n  },\n  arbitrumOne: {\n    id: 42_161,\n    name: 'Arbitrum One',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'AETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbiscan',\n      url: 'https://arbiscan.io'\n    }, {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    }]\n  },\n  arbitrumRinkeby: {\n    id: 421_611,\n    name: 'Arbitrum Rinkeby',\n    nativeCurrency: {\n      name: 'Arbitrum Rinkeby Ether',\n      symbol: 'ARETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    }],\n    testnet: true\n  },\n  avalanche: {\n    id: 43_114,\n    name: 'Avalanche Mainnet',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://snowtrace.io'\n    }],\n    testnet: false\n  },\n  avalancheFuji: {\n    id: 43_113,\n    name: 'Avalanche Fuji Testnet',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://testnet.snowtrace.io'\n    }],\n    testnet: true\n  },\n  localhost: {\n    id: 1_337,\n    name: 'Localhost',\n    rpcUrls: ['https://127.0.0.1:8545']\n  },\n  hardhat: {\n    id: 31_337,\n    name: 'Hardhat',\n    rpcUrls: ['http://127.0.0.1:8545']\n  }\n};\nconst allChains = Object.values(chain);\nconst defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nconst defaultL2Chains = [chain.optimism, chain.optimismKovan, chain.polygonMainnet, chain.polygonTestnetMumbai, chain.arbitrumOne, chain.arbitrumRinkeby];\nconst developmentChains = [chain.localhost, chain.hardhat];\n\nconst normalizeChainId = chainId => {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  return chainId;\n};\n\nclass AddChainError extends Error {\n  name = 'AddChainError';\n  message = 'Error adding chain';\n}\n\nclass ChainNotConfiguredError extends Error {\n  name = 'ChainNotConfigured';\n  message = 'Chain not configured';\n}\n\nclass ConnectorAlreadyConnectedError extends Error {\n  name = 'ConnectorAlreadyConnectedError';\n  message = 'Connector already connected';\n}\n\nclass ConnectorNotFoundError extends Error {\n  name = 'ConnectorNotFoundError';\n  message = 'Connector not found';\n}\n\nclass SwitchChainError extends Error {\n  name = 'SwitchChainError';\n  message = 'Error switching chain';\n}\n\nclass UserRejectedRequestError extends Error {\n  name = 'UserRejectedRequestError';\n  message = 'User rejected request';\n}\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n}\n\nexport { AddChainError as A, Connector as C, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a, allChains as b, ChainNotConfiguredError as c, defaultChains as d, defaultL2Chains as e, chain as f, developmentChains as g, ConnectorAlreadyConnectedError as h, normalizeChainId as n };","map":{"version":3,"sources":["/Users/macbook/Documents/pre-dao/node_modules/wagmi-core/dist/base-5c99d89b.esm.js"],"names":["EventEmitter","chain","mainnet","id","name","nativeCurrency","symbol","decimals","rpcUrls","blockExplorers","url","ropsten","testnet","rinkeby","goerli","kovan","optimism","optimismKovan","polygonMainnet","polygonTestnetMumbai","arbitrumOne","arbitrumRinkeby","avalanche","avalancheFuji","localhost","hardhat","allChains","Object","values","defaultChains","defaultL2Chains","developmentChains","normalizeChainId","chainId","Number","parseInt","trim","substring","AddChainError","Error","message","ChainNotConfiguredError","ConnectorAlreadyConnectedError","ConnectorNotFoundError","SwitchChainError","UserRejectedRequestError","Connector","constructor","chains","options","isChainUnsupported","some","x","A","C","S","U","a","b","c","d","e","f","g","h","n"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\n\n/**\n * Data from Chainlist\n * @see https://chainlist.org\n */\nconst chain = {\n  mainnet: {\n    id: 1,\n    name: 'Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://etherscan.io'\n    }]\n  },\n  ropsten: {\n    id: 3,\n    name: 'Ropsten',\n    nativeCurrency: {\n      name: 'Ropsten Ether',\n      symbol: 'ropETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://ropsten.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://ropsten.etherscan.io'\n    }],\n    testnet: true\n  },\n  rinkeby: {\n    id: 4,\n    name: 'Rinkeby',\n    nativeCurrency: {\n      name: 'Rinkeby Ether',\n      symbol: 'rETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://rinkeby.etherscan.io'\n    }],\n    testnet: true\n  },\n  goerli: {\n    id: 5,\n    name: 'Goerli',\n    nativeCurrency: {\n      name: 'Goerli Ether',\n      symbol: 'gETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://goerli.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io'\n    }],\n    testnet: true\n  },\n  kovan: {\n    id: 42,\n    name: 'Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'kETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://kovan.etherscan.io'\n    }],\n    testnet: true\n  },\n  optimism: {\n    id: 10,\n    name: 'Optimism',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://optimistic.etherscan.io'\n    }]\n  },\n  optimismKovan: {\n    id: 69,\n    name: 'Optimism Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'KOR',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://kovan-optimistic.etherscan.io'\n    }],\n    testnet: true\n  },\n  polygonMainnet: {\n    id: 137,\n    name: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://polygon-rpc.com', 'https://rpc-mainnet.matic.network', 'https://matic-mainnet.chainstacklabs.com', 'https://rpc-mainnet.maticvigil.com', 'https://rpc-mainnet.matic.quiknode.pro', 'https://matic-mainnet-full-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://polygonscan.com'\n    }]\n  },\n  polygonTestnetMumbai: {\n    id: 80_001,\n    name: 'Mumbai',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://matic-mumbai.chainstacklabs.com', 'https://rpc-mumbai.maticvigil.com', 'https://matic-testnet-archive-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://mumbai.polygonscan.com'\n    }],\n    testnet: true\n  },\n  arbitrumOne: {\n    id: 42_161,\n    name: 'Arbitrum One',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'AETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbiscan',\n      url: 'https://arbiscan.io'\n    }, {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    }]\n  },\n  arbitrumRinkeby: {\n    id: 421_611,\n    name: 'Arbitrum Rinkeby',\n    nativeCurrency: {\n      name: 'Arbitrum Rinkeby Ether',\n      symbol: 'ARETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    }],\n    testnet: true\n  },\n  avalanche: {\n    id: 43_114,\n    name: 'Avalanche Mainnet',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://snowtrace.io'\n    }],\n    testnet: false\n  },\n  avalancheFuji: {\n    id: 43_113,\n    name: 'Avalanche Fuji Testnet',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://testnet.snowtrace.io'\n    }],\n    testnet: true\n  },\n  localhost: {\n    id: 1_337,\n    name: 'Localhost',\n    rpcUrls: ['https://127.0.0.1:8545']\n  },\n  hardhat: {\n    id: 31_337,\n    name: 'Hardhat',\n    rpcUrls: ['http://127.0.0.1:8545']\n  }\n};\nconst allChains = Object.values(chain);\nconst defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nconst defaultL2Chains = [chain.optimism, chain.optimismKovan, chain.polygonMainnet, chain.polygonTestnetMumbai, chain.arbitrumOne, chain.arbitrumRinkeby];\nconst developmentChains = [chain.localhost, chain.hardhat];\n\nconst normalizeChainId = chainId => {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  return chainId;\n};\n\nclass AddChainError extends Error {\n  name = 'AddChainError';\n  message = 'Error adding chain';\n}\nclass ChainNotConfiguredError extends Error {\n  name = 'ChainNotConfigured';\n  message = 'Chain not configured';\n}\nclass ConnectorAlreadyConnectedError extends Error {\n  name = 'ConnectorAlreadyConnectedError';\n  message = 'Connector already connected';\n}\nclass ConnectorNotFoundError extends Error {\n  name = 'ConnectorNotFoundError';\n  message = 'Connector not found';\n}\nclass SwitchChainError extends Error {\n  name = 'SwitchChainError';\n  message = 'Error switching chain';\n}\nclass UserRejectedRequestError extends Error {\n  name = 'UserRejectedRequestError';\n  message = 'User rejected request';\n}\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n  constructor({\n    chains = defaultChains,\n    options\n  }) {\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n}\n\nexport { AddChainError as A, Connector as C, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a, allChains as b, ChainNotConfiguredError as c, defaultChains as d, defaultL2Chains as e, chain as f, developmentChains as g, ConnectorAlreadyConnectedError as h, normalizeChainId as n };\n"]},"metadata":{},"sourceType":"module"}