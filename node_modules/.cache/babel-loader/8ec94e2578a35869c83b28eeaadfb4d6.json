{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/pre-dao/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider, chain, defaultL2Chains } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chains = defaultL2Chains;\n\nconst connectors = _ref => {\n  var _chains$find$rpcUrls$, _chains$find, _chains$find$rpcUrls;\n\n  let {\n    chainId\n  } = _ref;\n  const rpcUrl = (_chains$find$rpcUrls$ = (_chains$find = chains.find(x => x.id === chainId)) === null || _chains$find === void 0 ? void 0 : (_chains$find$rpcUrls = _chains$find.rpcUrls) === null || _chains$find$rpcUrls === void 0 ? void 0 : _chains$find$rpcUrls[0]) !== null && _chains$find$rpcUrls$ !== void 0 ? _chains$find$rpcUrls$ : chain.mainnet.rpcUrls[0];\n  return [new InjectedConnector({\n    chains,\n    options: {\n      shimDisconnect: true\n    }\n  })];\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    autoConnect: true,\n    connectors: connectors,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/macbook/Documents/pre-dao/src/index.js"],"names":["React","ReactDOM","App","Provider","chain","defaultL2Chains","InjectedConnector","chains","connectors","chainId","rpcUrl","find","x","id","rpcUrls","mainnet","options","shimDisconnect","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,SAASC,iBAAT,QAAkC,2BAAlC;;AAEA,MAAMC,MAAM,GAAGF,eAAf;;AAEA,MAAMG,UAAU,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAClC,QAAMC,MAAM,4CACVH,MAAM,CAACI,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASJ,OAA5B,CADU,yEACV,aAAsCK,OAD5B,yDACV,qBAAgD,CAAhD,CADU,yEAEVV,KAAK,CAACW,OAAN,CAAcD,OAAd,CAAsB,CAAtB,CAFF;AAGA,SAAO,CACL,IAAIR,iBAAJ,CAAsB;AACpBC,IAAAA,MADoB;AAEpBS,IAAAA,OAAO,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB;AAFW,GAAtB,CADK,CAAP;AAMD,CAVD;;AAaAhB,QAAQ,CAACiB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,WAAW,MAArB;AAAsB,IAAA,UAAU,EAAEV,UAAlC;AAAA,2BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider, chain, defaultL2Chains } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected';\n\nconst chains = defaultL2Chains;\n\nconst connectors = ({ chainId }) => {\n  const rpcUrl =\n    chains.find((x) => x.id === chainId)?.rpcUrls?.[0] ??\n    chain.mainnet.rpcUrls[0]\n  return [\n    new InjectedConnector({\n      chains,\n      options: { shimDisconnect: true },\n    })\n  ]\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider autoConnect connectors={connectors}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}